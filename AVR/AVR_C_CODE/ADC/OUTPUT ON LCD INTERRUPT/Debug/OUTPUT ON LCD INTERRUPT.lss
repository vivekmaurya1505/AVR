
OUTPUT ON LCD INTERRUPT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  00000850  000008c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000850  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  000008d4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000930  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  0000096c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b8d  00000000  00000000  000009c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008ee  00000000  00000000  00001551  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000403  00000000  00000000  00001e3f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000110  00000000  00000000  00002244  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000047e  00000000  00000000  00002354  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003ae  00000000  00000000  000027d2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00002b80  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	0c 94 cc 00 	jmp	0x198	; 0x198 <__vector_21>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  70:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  7c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  80:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  84:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  88:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e5       	ldi	r30, 0x50	; 80
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <__do_copy_data+0x10>
  a4:	05 90       	lpm	r0, Z+
  a6:	0d 92       	st	X+, r0
  a8:	a0 31       	cpi	r26, 0x10	; 16
  aa:	b1 07       	cpc	r27, r17
  ac:	d9 f7       	brne	.-10     	; 0xa4 <__do_copy_data+0xc>
  ae:	0e 94 b6 00 	call	0x16c	; 0x16c <main>
  b2:	0c 94 26 04 	jmp	0x84c	; 0x84c <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <adc_init>:
}
void adc_init()

{   //ADC0 IS SELECTED BY SETTING MUX5:0 TO ZERO.
	// Vref set to 5 volt and 8 bits in higher ADCH and 2 bits in lower ADCL
	ADMUX |= (1<<REFS0);
  ba:	3e 9a       	sbi	0x07, 6	; 7
	sei();
  bc:	78 94       	sei
	//prescaler set to 128 that is 125 KHz adc clk freq
	ADCSRA |=(1<<ADEN)|(1<<ADPS0)|(1<<ADPS1)|(1<<ADPS2);
  be:	86 b1       	in	r24, 0x06	; 6
  c0:	87 68       	ori	r24, 0x87	; 135
  c2:	86 b9       	out	0x06, r24	; 6
	//ADCSRB -> ADTS2:0  free running mode -- set to zero
	// To set start conversion bit
	ADCSRA |=(1<<ADSC);
  c4:	36 9a       	sbi	0x06, 6	; 6
	//To enable interrupt
	ADCSRA|=(1<<ADIE);
  c6:	33 9a       	sbi	0x06, 3	; 6
  c8:	08 95       	ret

000000ca <en>:
	LCD_PORT=((DATA )<<4)|(1<<RS);                //lsb data shifted by 4
	en();                                         // lcd_port data copy to lcd
}
void en(){
	
	LCD_PORT|=(1<<EN);
  ca:	da 9a       	sbi	0x1b, 2	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  cc:	8f e5       	ldi	r24, 0x5F	; 95
  ce:	9a ee       	ldi	r25, 0xEA	; 234
  d0:	01 97       	sbiw	r24, 0x01	; 1
  d2:	f1 f7       	brne	.-4      	; 0xd0 <en+0x6>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <en+0xc>
  d6:	00 00       	nop
	_delay_ms(15);
	LCD_PORT&=~(1<<EN);
  d8:	da 98       	cbi	0x1b, 2	; 27
  da:	8f e1       	ldi	r24, 0x1F	; 31
  dc:	9e e4       	ldi	r25, 0x4E	; 78
  de:	01 97       	sbiw	r24, 0x01	; 1
  e0:	f1 f7       	brne	.-4      	; 0xde <en+0x14>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <en+0x1a>
  e4:	00 00       	nop
  e6:	08 95       	ret

000000e8 <lcd_cmd>:
	ADCSRA|=(1<<ADIF);
	//To reset start conversion bit
	ADCSRA |=(1<<ADSC);
}
//==============================
void lcd_cmd(unsigned int COMMAND){
  e8:	cf 93       	push	r28
  ea:	c8 2f       	mov	r28, r24
	
	LCD_PORT=(COMMAND & 0xf0);                   //msb data copy to lcd_port
  ec:	80 7f       	andi	r24, 0xF0	; 240
  ee:	8b bb       	out	0x1b, r24	; 27
	en();                                        // lcd_port data copy to lcd
  f0:	0e 94 65 00 	call	0xca	; 0xca <en>
	LCD_PORT=((COMMAND & 0x0f)<<4);              //lsb data shifted by 4
  f4:	c2 95       	swap	r28
  f6:	c0 7f       	andi	r28, 0xF0	; 240
  f8:	cb bb       	out	0x1b, r28	; 27
	en();                                        // lcd_port data copy to lcd
  fa:	0e 94 65 00 	call	0xca	; 0xca <en>
}
  fe:	cf 91       	pop	r28
 100:	08 95       	ret

00000102 <lcd_data>:
void lcd_data(unsigned char DATA){
 102:	cf 93       	push	r28
 104:	c8 2f       	mov	r28, r24
	
	LCD_PORT=(DATA & 0xf0)|(1<<RS);               //msb data copy to lcd_port
 106:	80 7f       	andi	r24, 0xF0	; 240
 108:	81 60       	ori	r24, 0x01	; 1
 10a:	8b bb       	out	0x1b, r24	; 27
	en();                                         // lcd_port data copy to lcd
 10c:	0e 94 65 00 	call	0xca	; 0xca <en>
	LCD_PORT=((DATA )<<4)|(1<<RS);                //lsb data shifted by 4
 110:	20 e1       	ldi	r18, 0x10	; 16
 112:	c2 9f       	mul	r28, r18
 114:	c0 01       	movw	r24, r0
 116:	11 24       	eor	r1, r1
 118:	81 60       	ori	r24, 0x01	; 1
 11a:	8b bb       	out	0x1b, r24	; 27
	en();                                         // lcd_port data copy to lcd
 11c:	0e 94 65 00 	call	0xca	; 0xca <en>
}
 120:	cf 91       	pop	r28
 122:	08 95       	ret

00000124 <lcd_init>:
 124:	2f ef       	ldi	r18, 0xFF	; 255
 126:	89 ef       	ldi	r24, 0xF9	; 249
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	21 50       	subi	r18, 0x01	; 1
 12c:	80 40       	sbci	r24, 0x00	; 0
 12e:	90 40       	sbci	r25, 0x00	; 0
 130:	e1 f7       	brne	.-8      	; 0x12a <lcd_init+0x6>
 132:	00 c0       	rjmp	.+0      	; 0x134 <lcd_init+0x10>
 134:	00 00       	nop
	LCD_PORT&=~(1<<EN);
	_delay_ms(5);
}
void lcd_init(){
	_delay_ms(20);         //power on delay for lcd
	DDRA=0xf5;             // set port as a lcd outport 11110101
 136:	85 ef       	ldi	r24, 0xF5	; 245
 138:	8a bb       	out	0x1a, r24	; 26
	lcd_cmd(0x02);         //Return home
 13a:	82 e0       	ldi	r24, 0x02	; 2
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	0e 94 74 00 	call	0xe8	; 0xe8 <lcd_cmd>
	lcd_cmd(0X28);         //2 lines and 5×7 matrix (4-bit mode)
 142:	88 e2       	ldi	r24, 0x28	; 40
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	0e 94 74 00 	call	0xe8	; 0xe8 <lcd_cmd>
	lcd_cmd(0X01);         //Clear display screen
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	0e 94 74 00 	call	0xe8	; 0xe8 <lcd_cmd>
	lcd_cmd(0X0f);
 152:	8f e0       	ldi	r24, 0x0F	; 15
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	0e 94 74 00 	call	0xe8	; 0xe8 <lcd_cmd>
	lcd_cmd(0X06);         //Increment cursor (shift cursor to right)
 15a:	86 e0       	ldi	r24, 0x06	; 6
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	0e 94 74 00 	call	0xe8	; 0xe8 <lcd_cmd>
	lcd_cmd(0X80);         //Force cursor to beginning to 1st line
 162:	80 e8       	ldi	r24, 0x80	; 128
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	0e 94 74 00 	call	0xe8	; 0xe8 <lcd_cmd>
 16a:	08 95       	ret

0000016c <main>:
void lcd_result(int ,char *, int );     //print result value,(result,buffer[size],base)

//=============================
int main(void)
{
	DDRC=0xff;
 16c:	8f ef       	ldi	r24, 0xFF	; 255
 16e:	84 bb       	out	0x14, r24	; 20
	lcd_init();
 170:	0e 94 92 00 	call	0x124	; 0x124 <lcd_init>
	adc_init();
 174:	0e 94 5d 00 	call	0xba	; 0xba <adc_init>
 178:	ff cf       	rjmp	.-2      	; 0x178 <main+0xc>

0000017a <lcd_string>:
	lcd_cmd(0X01);         //Clear display screen
	lcd_cmd(0X0f);
	lcd_cmd(0X06);         //Increment cursor (shift cursor to right)
	lcd_cmd(0X80);         //Force cursor to beginning to 1st line
}
void lcd_string(char * str){
 17a:	cf 93       	push	r28
 17c:	df 93       	push	r29
 17e:	ec 01       	movw	r28, r24
	for(unsigned int i=0;str[i]!='\0';i++){
 180:	88 81       	ld	r24, Y
 182:	88 23       	and	r24, r24
 184:	31 f0       	breq	.+12     	; 0x192 <lcd_string+0x18>
 186:	21 96       	adiw	r28, 0x01	; 1
		lcd_data(str[i]);
 188:	0e 94 81 00 	call	0x102	; 0x102 <lcd_data>
	lcd_cmd(0X0f);
	lcd_cmd(0X06);         //Increment cursor (shift cursor to right)
	lcd_cmd(0X80);         //Force cursor to beginning to 1st line
}
void lcd_string(char * str){
	for(unsigned int i=0;str[i]!='\0';i++){
 18c:	89 91       	ld	r24, Y+
 18e:	81 11       	cpse	r24, r1
 190:	fb cf       	rjmp	.-10     	; 0x188 <lcd_string+0xe>
		lcd_data(str[i]);
	}
 192:	df 91       	pop	r29
 194:	cf 91       	pop	r28
 196:	08 95       	ret

00000198 <__vector_21>:
	
}


ISR(ADC_vect)
{
 198:	1f 92       	push	r1
 19a:	0f 92       	push	r0
 19c:	0f b6       	in	r0, 0x3f	; 63
 19e:	0f 92       	push	r0
 1a0:	11 24       	eor	r1, r1
 1a2:	0f 93       	push	r16
 1a4:	1f 93       	push	r17
 1a6:	2f 93       	push	r18
 1a8:	3f 93       	push	r19
 1aa:	4f 93       	push	r20
 1ac:	5f 93       	push	r21
 1ae:	6f 93       	push	r22
 1b0:	7f 93       	push	r23
 1b2:	8f 93       	push	r24
 1b4:	9f 93       	push	r25
 1b6:	af 93       	push	r26
 1b8:	bf 93       	push	r27
 1ba:	ef 93       	push	r30
 1bc:	ff 93       	push	r31
 1be:	cf 93       	push	r28
 1c0:	df 93       	push	r29
 1c2:	cd b7       	in	r28, 0x3d	; 61
 1c4:	de b7       	in	r29, 0x3e	; 62
 1c6:	64 97       	sbiw	r28, 0x14	; 20
 1c8:	de bf       	out	0x3e, r29	; 62
 1ca:	cd bf       	out	0x3d, r28	; 61
	char buf1[20];
	unsigned int DOUT=0;
	DOUT=(ADC*(5000/1024));
 1cc:	84 b1       	in	r24, 0x04	; 4
 1ce:	95 b1       	in	r25, 0x05	; 5

	//snprintf() function formats and stores a series of characters and values in the array buffer.
	snprintf(buf1, 20, "LDR_ADC_V=%dmv",DOUT);
 1d0:	88 0f       	add	r24, r24
 1d2:	99 1f       	adc	r25, r25
 1d4:	88 0f       	add	r24, r24
 1d6:	99 1f       	adc	r25, r25
 1d8:	9f 93       	push	r25
 1da:	8f 93       	push	r24
 1dc:	80 e0       	ldi	r24, 0x00	; 0
 1de:	91 e0       	ldi	r25, 0x01	; 1
 1e0:	9f 93       	push	r25
 1e2:	8f 93       	push	r24
 1e4:	1f 92       	push	r1
 1e6:	84 e1       	ldi	r24, 0x14	; 20
 1e8:	8f 93       	push	r24
 1ea:	8e 01       	movw	r16, r28
 1ec:	0f 5f       	subi	r16, 0xFF	; 255
 1ee:	1f 4f       	sbci	r17, 0xFF	; 255
 1f0:	1f 93       	push	r17
 1f2:	0f 93       	push	r16
 1f4:	0e 94 2e 01 	call	0x25c	; 0x25c <snprintf>
 1f8:	2f ef       	ldi	r18, 0xFF	; 255
 1fa:	87 ea       	ldi	r24, 0xA7	; 167
 1fc:	91 e6       	ldi	r25, 0x61	; 97
 1fe:	21 50       	subi	r18, 0x01	; 1
 200:	80 40       	sbci	r24, 0x00	; 0
 202:	90 40       	sbci	r25, 0x00	; 0
 204:	e1 f7       	brne	.-8      	; 0x1fe <__vector_21+0x66>
 206:	00 c0       	rjmp	.+0      	; 0x208 <__vector_21+0x70>
 208:	00 00       	nop
	
	_delay_ms(2000);
	lcd_cmd(0x01);
 20a:	81 e0       	ldi	r24, 0x01	; 1
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	0e 94 74 00 	call	0xe8	; 0xe8 <lcd_cmd>
	lcd_string(buf1);
 212:	c8 01       	movw	r24, r16
 214:	0e 94 bd 00 	call	0x17a	; 0x17a <lcd_string>
	
	//To clear interrupt flag
	ADCSRA|=(1<<ADIF);
 218:	34 9a       	sbi	0x06, 4	; 6
	//To reset start conversion bit
	ADCSRA |=(1<<ADSC);
 21a:	36 9a       	sbi	0x06, 6	; 6
}
 21c:	0f b6       	in	r0, 0x3f	; 63
 21e:	f8 94       	cli
 220:	de bf       	out	0x3e, r29	; 62
 222:	0f be       	out	0x3f, r0	; 63
 224:	cd bf       	out	0x3d, r28	; 61
 226:	64 96       	adiw	r28, 0x14	; 20
 228:	0f b6       	in	r0, 0x3f	; 63
 22a:	f8 94       	cli
 22c:	de bf       	out	0x3e, r29	; 62
 22e:	0f be       	out	0x3f, r0	; 63
 230:	cd bf       	out	0x3d, r28	; 61
 232:	df 91       	pop	r29
 234:	cf 91       	pop	r28
 236:	ff 91       	pop	r31
 238:	ef 91       	pop	r30
 23a:	bf 91       	pop	r27
 23c:	af 91       	pop	r26
 23e:	9f 91       	pop	r25
 240:	8f 91       	pop	r24
 242:	7f 91       	pop	r23
 244:	6f 91       	pop	r22
 246:	5f 91       	pop	r21
 248:	4f 91       	pop	r20
 24a:	3f 91       	pop	r19
 24c:	2f 91       	pop	r18
 24e:	1f 91       	pop	r17
 250:	0f 91       	pop	r16
 252:	0f 90       	pop	r0
 254:	0f be       	out	0x3f, r0	; 63
 256:	0f 90       	pop	r0
 258:	1f 90       	pop	r1
 25a:	18 95       	reti

0000025c <snprintf>:
 25c:	ae e0       	ldi	r26, 0x0E	; 14
 25e:	b0 e0       	ldi	r27, 0x00	; 0
 260:	e4 e3       	ldi	r30, 0x34	; 52
 262:	f1 e0       	ldi	r31, 0x01	; 1
 264:	0c 94 fd 03 	jmp	0x7fa	; 0x7fa <__prologue_saves__+0x1c>
 268:	0d 89       	ldd	r16, Y+21	; 0x15
 26a:	1e 89       	ldd	r17, Y+22	; 0x16
 26c:	8f 89       	ldd	r24, Y+23	; 0x17
 26e:	98 8d       	ldd	r25, Y+24	; 0x18
 270:	26 e0       	ldi	r18, 0x06	; 6
 272:	2c 83       	std	Y+4, r18	; 0x04
 274:	1a 83       	std	Y+2, r17	; 0x02
 276:	09 83       	std	Y+1, r16	; 0x01
 278:	97 ff       	sbrs	r25, 7
 27a:	02 c0       	rjmp	.+4      	; 0x280 <snprintf+0x24>
 27c:	80 e0       	ldi	r24, 0x00	; 0
 27e:	90 e8       	ldi	r25, 0x80	; 128
 280:	01 97       	sbiw	r24, 0x01	; 1
 282:	9e 83       	std	Y+6, r25	; 0x06
 284:	8d 83       	std	Y+5, r24	; 0x05
 286:	ae 01       	movw	r20, r28
 288:	45 5e       	subi	r20, 0xE5	; 229
 28a:	5f 4f       	sbci	r21, 0xFF	; 255
 28c:	69 8d       	ldd	r22, Y+25	; 0x19
 28e:	7a 8d       	ldd	r23, Y+26	; 0x1a
 290:	ce 01       	movw	r24, r28
 292:	01 96       	adiw	r24, 0x01	; 1
 294:	0e 94 5e 01 	call	0x2bc	; 0x2bc <vfprintf>
 298:	4d 81       	ldd	r20, Y+5	; 0x05
 29a:	5e 81       	ldd	r21, Y+6	; 0x06
 29c:	57 fd       	sbrc	r21, 7
 29e:	0a c0       	rjmp	.+20     	; 0x2b4 <snprintf+0x58>
 2a0:	2f 81       	ldd	r18, Y+7	; 0x07
 2a2:	38 85       	ldd	r19, Y+8	; 0x08
 2a4:	42 17       	cp	r20, r18
 2a6:	53 07       	cpc	r21, r19
 2a8:	0c f4       	brge	.+2      	; 0x2ac <snprintf+0x50>
 2aa:	9a 01       	movw	r18, r20
 2ac:	f8 01       	movw	r30, r16
 2ae:	e2 0f       	add	r30, r18
 2b0:	f3 1f       	adc	r31, r19
 2b2:	10 82       	st	Z, r1
 2b4:	2e 96       	adiw	r28, 0x0e	; 14
 2b6:	e4 e0       	ldi	r30, 0x04	; 4
 2b8:	0c 94 19 04 	jmp	0x832	; 0x832 <__epilogue_restores__+0x1c>

000002bc <vfprintf>:
 2bc:	ab e0       	ldi	r26, 0x0B	; 11
 2be:	b0 e0       	ldi	r27, 0x00	; 0
 2c0:	e4 e6       	ldi	r30, 0x64	; 100
 2c2:	f1 e0       	ldi	r31, 0x01	; 1
 2c4:	0c 94 ef 03 	jmp	0x7de	; 0x7de <__prologue_saves__>
 2c8:	6c 01       	movw	r12, r24
 2ca:	7b 01       	movw	r14, r22
 2cc:	8a 01       	movw	r16, r20
 2ce:	fc 01       	movw	r30, r24
 2d0:	17 82       	std	Z+7, r1	; 0x07
 2d2:	16 82       	std	Z+6, r1	; 0x06
 2d4:	83 81       	ldd	r24, Z+3	; 0x03
 2d6:	81 ff       	sbrs	r24, 1
 2d8:	cc c1       	rjmp	.+920    	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 2da:	ce 01       	movw	r24, r28
 2dc:	01 96       	adiw	r24, 0x01	; 1
 2de:	3c 01       	movw	r6, r24
 2e0:	f6 01       	movw	r30, r12
 2e2:	93 81       	ldd	r25, Z+3	; 0x03
 2e4:	f7 01       	movw	r30, r14
 2e6:	93 fd       	sbrc	r25, 3
 2e8:	85 91       	lpm	r24, Z+
 2ea:	93 ff       	sbrs	r25, 3
 2ec:	81 91       	ld	r24, Z+
 2ee:	7f 01       	movw	r14, r30
 2f0:	88 23       	and	r24, r24
 2f2:	09 f4       	brne	.+2      	; 0x2f6 <vfprintf+0x3a>
 2f4:	ba c1       	rjmp	.+884    	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
 2f6:	85 32       	cpi	r24, 0x25	; 37
 2f8:	39 f4       	brne	.+14     	; 0x308 <vfprintf+0x4c>
 2fa:	93 fd       	sbrc	r25, 3
 2fc:	85 91       	lpm	r24, Z+
 2fe:	93 ff       	sbrs	r25, 3
 300:	81 91       	ld	r24, Z+
 302:	7f 01       	movw	r14, r30
 304:	85 32       	cpi	r24, 0x25	; 37
 306:	29 f4       	brne	.+10     	; 0x312 <vfprintf+0x56>
 308:	b6 01       	movw	r22, r12
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	0e 94 55 03 	call	0x6aa	; 0x6aa <fputc>
 310:	e7 cf       	rjmp	.-50     	; 0x2e0 <vfprintf+0x24>
 312:	91 2c       	mov	r9, r1
 314:	21 2c       	mov	r2, r1
 316:	31 2c       	mov	r3, r1
 318:	ff e1       	ldi	r31, 0x1F	; 31
 31a:	f3 15       	cp	r31, r3
 31c:	d8 f0       	brcs	.+54     	; 0x354 <vfprintf+0x98>
 31e:	8b 32       	cpi	r24, 0x2B	; 43
 320:	79 f0       	breq	.+30     	; 0x340 <vfprintf+0x84>
 322:	38 f4       	brcc	.+14     	; 0x332 <vfprintf+0x76>
 324:	80 32       	cpi	r24, 0x20	; 32
 326:	79 f0       	breq	.+30     	; 0x346 <vfprintf+0x8a>
 328:	83 32       	cpi	r24, 0x23	; 35
 32a:	a1 f4       	brne	.+40     	; 0x354 <vfprintf+0x98>
 32c:	23 2d       	mov	r18, r3
 32e:	20 61       	ori	r18, 0x10	; 16
 330:	1d c0       	rjmp	.+58     	; 0x36c <vfprintf+0xb0>
 332:	8d 32       	cpi	r24, 0x2D	; 45
 334:	61 f0       	breq	.+24     	; 0x34e <vfprintf+0x92>
 336:	80 33       	cpi	r24, 0x30	; 48
 338:	69 f4       	brne	.+26     	; 0x354 <vfprintf+0x98>
 33a:	23 2d       	mov	r18, r3
 33c:	21 60       	ori	r18, 0x01	; 1
 33e:	16 c0       	rjmp	.+44     	; 0x36c <vfprintf+0xb0>
 340:	83 2d       	mov	r24, r3
 342:	82 60       	ori	r24, 0x02	; 2
 344:	38 2e       	mov	r3, r24
 346:	e3 2d       	mov	r30, r3
 348:	e4 60       	ori	r30, 0x04	; 4
 34a:	3e 2e       	mov	r3, r30
 34c:	2a c0       	rjmp	.+84     	; 0x3a2 <vfprintf+0xe6>
 34e:	f3 2d       	mov	r31, r3
 350:	f8 60       	ori	r31, 0x08	; 8
 352:	1d c0       	rjmp	.+58     	; 0x38e <vfprintf+0xd2>
 354:	37 fc       	sbrc	r3, 7
 356:	2d c0       	rjmp	.+90     	; 0x3b2 <vfprintf+0xf6>
 358:	20 ed       	ldi	r18, 0xD0	; 208
 35a:	28 0f       	add	r18, r24
 35c:	2a 30       	cpi	r18, 0x0A	; 10
 35e:	40 f0       	brcs	.+16     	; 0x370 <vfprintf+0xb4>
 360:	8e 32       	cpi	r24, 0x2E	; 46
 362:	b9 f4       	brne	.+46     	; 0x392 <vfprintf+0xd6>
 364:	36 fc       	sbrc	r3, 6
 366:	81 c1       	rjmp	.+770    	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
 368:	23 2d       	mov	r18, r3
 36a:	20 64       	ori	r18, 0x40	; 64
 36c:	32 2e       	mov	r3, r18
 36e:	19 c0       	rjmp	.+50     	; 0x3a2 <vfprintf+0xe6>
 370:	36 fe       	sbrs	r3, 6
 372:	06 c0       	rjmp	.+12     	; 0x380 <vfprintf+0xc4>
 374:	8a e0       	ldi	r24, 0x0A	; 10
 376:	98 9e       	mul	r9, r24
 378:	20 0d       	add	r18, r0
 37a:	11 24       	eor	r1, r1
 37c:	92 2e       	mov	r9, r18
 37e:	11 c0       	rjmp	.+34     	; 0x3a2 <vfprintf+0xe6>
 380:	ea e0       	ldi	r30, 0x0A	; 10
 382:	2e 9e       	mul	r2, r30
 384:	20 0d       	add	r18, r0
 386:	11 24       	eor	r1, r1
 388:	22 2e       	mov	r2, r18
 38a:	f3 2d       	mov	r31, r3
 38c:	f0 62       	ori	r31, 0x20	; 32
 38e:	3f 2e       	mov	r3, r31
 390:	08 c0       	rjmp	.+16     	; 0x3a2 <vfprintf+0xe6>
 392:	8c 36       	cpi	r24, 0x6C	; 108
 394:	21 f4       	brne	.+8      	; 0x39e <vfprintf+0xe2>
 396:	83 2d       	mov	r24, r3
 398:	80 68       	ori	r24, 0x80	; 128
 39a:	38 2e       	mov	r3, r24
 39c:	02 c0       	rjmp	.+4      	; 0x3a2 <vfprintf+0xe6>
 39e:	88 36       	cpi	r24, 0x68	; 104
 3a0:	41 f4       	brne	.+16     	; 0x3b2 <vfprintf+0xf6>
 3a2:	f7 01       	movw	r30, r14
 3a4:	93 fd       	sbrc	r25, 3
 3a6:	85 91       	lpm	r24, Z+
 3a8:	93 ff       	sbrs	r25, 3
 3aa:	81 91       	ld	r24, Z+
 3ac:	7f 01       	movw	r14, r30
 3ae:	81 11       	cpse	r24, r1
 3b0:	b3 cf       	rjmp	.-154    	; 0x318 <vfprintf+0x5c>
 3b2:	98 2f       	mov	r25, r24
 3b4:	9f 7d       	andi	r25, 0xDF	; 223
 3b6:	95 54       	subi	r25, 0x45	; 69
 3b8:	93 30       	cpi	r25, 0x03	; 3
 3ba:	28 f4       	brcc	.+10     	; 0x3c6 <vfprintf+0x10a>
 3bc:	0c 5f       	subi	r16, 0xFC	; 252
 3be:	1f 4f       	sbci	r17, 0xFF	; 255
 3c0:	9f e3       	ldi	r25, 0x3F	; 63
 3c2:	99 83       	std	Y+1, r25	; 0x01
 3c4:	0d c0       	rjmp	.+26     	; 0x3e0 <vfprintf+0x124>
 3c6:	83 36       	cpi	r24, 0x63	; 99
 3c8:	31 f0       	breq	.+12     	; 0x3d6 <vfprintf+0x11a>
 3ca:	83 37       	cpi	r24, 0x73	; 115
 3cc:	71 f0       	breq	.+28     	; 0x3ea <vfprintf+0x12e>
 3ce:	83 35       	cpi	r24, 0x53	; 83
 3d0:	09 f0       	breq	.+2      	; 0x3d4 <vfprintf+0x118>
 3d2:	59 c0       	rjmp	.+178    	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 3d4:	21 c0       	rjmp	.+66     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3d6:	f8 01       	movw	r30, r16
 3d8:	80 81       	ld	r24, Z
 3da:	89 83       	std	Y+1, r24	; 0x01
 3dc:	0e 5f       	subi	r16, 0xFE	; 254
 3de:	1f 4f       	sbci	r17, 0xFF	; 255
 3e0:	88 24       	eor	r8, r8
 3e2:	83 94       	inc	r8
 3e4:	91 2c       	mov	r9, r1
 3e6:	53 01       	movw	r10, r6
 3e8:	13 c0       	rjmp	.+38     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3ea:	28 01       	movw	r4, r16
 3ec:	f2 e0       	ldi	r31, 0x02	; 2
 3ee:	4f 0e       	add	r4, r31
 3f0:	51 1c       	adc	r5, r1
 3f2:	f8 01       	movw	r30, r16
 3f4:	a0 80       	ld	r10, Z
 3f6:	b1 80       	ldd	r11, Z+1	; 0x01
 3f8:	36 fe       	sbrs	r3, 6
 3fa:	03 c0       	rjmp	.+6      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3fc:	69 2d       	mov	r22, r9
 3fe:	70 e0       	ldi	r23, 0x00	; 0
 400:	02 c0       	rjmp	.+4      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 402:	6f ef       	ldi	r22, 0xFF	; 255
 404:	7f ef       	ldi	r23, 0xFF	; 255
 406:	c5 01       	movw	r24, r10
 408:	0e 94 4a 03 	call	0x694	; 0x694 <strnlen>
 40c:	4c 01       	movw	r8, r24
 40e:	82 01       	movw	r16, r4
 410:	f3 2d       	mov	r31, r3
 412:	ff 77       	andi	r31, 0x7F	; 127
 414:	3f 2e       	mov	r3, r31
 416:	16 c0       	rjmp	.+44     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 418:	28 01       	movw	r4, r16
 41a:	22 e0       	ldi	r18, 0x02	; 2
 41c:	42 0e       	add	r4, r18
 41e:	51 1c       	adc	r5, r1
 420:	f8 01       	movw	r30, r16
 422:	a0 80       	ld	r10, Z
 424:	b1 80       	ldd	r11, Z+1	; 0x01
 426:	36 fe       	sbrs	r3, 6
 428:	03 c0       	rjmp	.+6      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 42a:	69 2d       	mov	r22, r9
 42c:	70 e0       	ldi	r23, 0x00	; 0
 42e:	02 c0       	rjmp	.+4      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 430:	6f ef       	ldi	r22, 0xFF	; 255
 432:	7f ef       	ldi	r23, 0xFF	; 255
 434:	c5 01       	movw	r24, r10
 436:	0e 94 3f 03 	call	0x67e	; 0x67e <strnlen_P>
 43a:	4c 01       	movw	r8, r24
 43c:	f3 2d       	mov	r31, r3
 43e:	f0 68       	ori	r31, 0x80	; 128
 440:	3f 2e       	mov	r3, r31
 442:	82 01       	movw	r16, r4
 444:	33 fc       	sbrc	r3, 3
 446:	1b c0       	rjmp	.+54     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 448:	82 2d       	mov	r24, r2
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	88 16       	cp	r8, r24
 44e:	99 06       	cpc	r9, r25
 450:	b0 f4       	brcc	.+44     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 452:	b6 01       	movw	r22, r12
 454:	80 e2       	ldi	r24, 0x20	; 32
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	0e 94 55 03 	call	0x6aa	; 0x6aa <fputc>
 45c:	2a 94       	dec	r2
 45e:	f4 cf       	rjmp	.-24     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 460:	f5 01       	movw	r30, r10
 462:	37 fc       	sbrc	r3, 7
 464:	85 91       	lpm	r24, Z+
 466:	37 fe       	sbrs	r3, 7
 468:	81 91       	ld	r24, Z+
 46a:	5f 01       	movw	r10, r30
 46c:	b6 01       	movw	r22, r12
 46e:	90 e0       	ldi	r25, 0x00	; 0
 470:	0e 94 55 03 	call	0x6aa	; 0x6aa <fputc>
 474:	21 10       	cpse	r2, r1
 476:	2a 94       	dec	r2
 478:	21 e0       	ldi	r18, 0x01	; 1
 47a:	82 1a       	sub	r8, r18
 47c:	91 08       	sbc	r9, r1
 47e:	81 14       	cp	r8, r1
 480:	91 04       	cpc	r9, r1
 482:	71 f7       	brne	.-36     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 484:	e8 c0       	rjmp	.+464    	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
 486:	84 36       	cpi	r24, 0x64	; 100
 488:	11 f0       	breq	.+4      	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 48a:	89 36       	cpi	r24, 0x69	; 105
 48c:	41 f5       	brne	.+80     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 48e:	f8 01       	movw	r30, r16
 490:	37 fe       	sbrs	r3, 7
 492:	07 c0       	rjmp	.+14     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 494:	60 81       	ld	r22, Z
 496:	71 81       	ldd	r23, Z+1	; 0x01
 498:	82 81       	ldd	r24, Z+2	; 0x02
 49a:	93 81       	ldd	r25, Z+3	; 0x03
 49c:	0c 5f       	subi	r16, 0xFC	; 252
 49e:	1f 4f       	sbci	r17, 0xFF	; 255
 4a0:	08 c0       	rjmp	.+16     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 4a2:	60 81       	ld	r22, Z
 4a4:	71 81       	ldd	r23, Z+1	; 0x01
 4a6:	07 2e       	mov	r0, r23
 4a8:	00 0c       	add	r0, r0
 4aa:	88 0b       	sbc	r24, r24
 4ac:	99 0b       	sbc	r25, r25
 4ae:	0e 5f       	subi	r16, 0xFE	; 254
 4b0:	1f 4f       	sbci	r17, 0xFF	; 255
 4b2:	f3 2d       	mov	r31, r3
 4b4:	ff 76       	andi	r31, 0x6F	; 111
 4b6:	3f 2e       	mov	r3, r31
 4b8:	97 ff       	sbrs	r25, 7
 4ba:	09 c0       	rjmp	.+18     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4bc:	90 95       	com	r25
 4be:	80 95       	com	r24
 4c0:	70 95       	com	r23
 4c2:	61 95       	neg	r22
 4c4:	7f 4f       	sbci	r23, 0xFF	; 255
 4c6:	8f 4f       	sbci	r24, 0xFF	; 255
 4c8:	9f 4f       	sbci	r25, 0xFF	; 255
 4ca:	f0 68       	ori	r31, 0x80	; 128
 4cc:	3f 2e       	mov	r3, r31
 4ce:	2a e0       	ldi	r18, 0x0A	; 10
 4d0:	30 e0       	ldi	r19, 0x00	; 0
 4d2:	a3 01       	movw	r20, r6
 4d4:	0e 94 91 03 	call	0x722	; 0x722 <__ultoa_invert>
 4d8:	88 2e       	mov	r8, r24
 4da:	86 18       	sub	r8, r6
 4dc:	45 c0       	rjmp	.+138    	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 4de:	85 37       	cpi	r24, 0x75	; 117
 4e0:	31 f4       	brne	.+12     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4e2:	23 2d       	mov	r18, r3
 4e4:	2f 7e       	andi	r18, 0xEF	; 239
 4e6:	b2 2e       	mov	r11, r18
 4e8:	2a e0       	ldi	r18, 0x0A	; 10
 4ea:	30 e0       	ldi	r19, 0x00	; 0
 4ec:	25 c0       	rjmp	.+74     	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
 4ee:	93 2d       	mov	r25, r3
 4f0:	99 7f       	andi	r25, 0xF9	; 249
 4f2:	b9 2e       	mov	r11, r25
 4f4:	8f 36       	cpi	r24, 0x6F	; 111
 4f6:	c1 f0       	breq	.+48     	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 4f8:	18 f4       	brcc	.+6      	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4fa:	88 35       	cpi	r24, 0x58	; 88
 4fc:	79 f0       	breq	.+30     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 4fe:	b5 c0       	rjmp	.+362    	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
 500:	80 37       	cpi	r24, 0x70	; 112
 502:	19 f0       	breq	.+6      	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 504:	88 37       	cpi	r24, 0x78	; 120
 506:	21 f0       	breq	.+8      	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 508:	b0 c0       	rjmp	.+352    	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
 50a:	e9 2f       	mov	r30, r25
 50c:	e0 61       	ori	r30, 0x10	; 16
 50e:	be 2e       	mov	r11, r30
 510:	b4 fe       	sbrs	r11, 4
 512:	0d c0       	rjmp	.+26     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 514:	fb 2d       	mov	r31, r11
 516:	f4 60       	ori	r31, 0x04	; 4
 518:	bf 2e       	mov	r11, r31
 51a:	09 c0       	rjmp	.+18     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 51c:	34 fe       	sbrs	r3, 4
 51e:	0a c0       	rjmp	.+20     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 520:	29 2f       	mov	r18, r25
 522:	26 60       	ori	r18, 0x06	; 6
 524:	b2 2e       	mov	r11, r18
 526:	06 c0       	rjmp	.+12     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 528:	28 e0       	ldi	r18, 0x08	; 8
 52a:	30 e0       	ldi	r19, 0x00	; 0
 52c:	05 c0       	rjmp	.+10     	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
 52e:	20 e1       	ldi	r18, 0x10	; 16
 530:	30 e0       	ldi	r19, 0x00	; 0
 532:	02 c0       	rjmp	.+4      	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
 534:	20 e1       	ldi	r18, 0x10	; 16
 536:	32 e0       	ldi	r19, 0x02	; 2
 538:	f8 01       	movw	r30, r16
 53a:	b7 fe       	sbrs	r11, 7
 53c:	07 c0       	rjmp	.+14     	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 53e:	60 81       	ld	r22, Z
 540:	71 81       	ldd	r23, Z+1	; 0x01
 542:	82 81       	ldd	r24, Z+2	; 0x02
 544:	93 81       	ldd	r25, Z+3	; 0x03
 546:	0c 5f       	subi	r16, 0xFC	; 252
 548:	1f 4f       	sbci	r17, 0xFF	; 255
 54a:	06 c0       	rjmp	.+12     	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 54c:	60 81       	ld	r22, Z
 54e:	71 81       	ldd	r23, Z+1	; 0x01
 550:	80 e0       	ldi	r24, 0x00	; 0
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	0e 5f       	subi	r16, 0xFE	; 254
 556:	1f 4f       	sbci	r17, 0xFF	; 255
 558:	a3 01       	movw	r20, r6
 55a:	0e 94 91 03 	call	0x722	; 0x722 <__ultoa_invert>
 55e:	88 2e       	mov	r8, r24
 560:	86 18       	sub	r8, r6
 562:	fb 2d       	mov	r31, r11
 564:	ff 77       	andi	r31, 0x7F	; 127
 566:	3f 2e       	mov	r3, r31
 568:	36 fe       	sbrs	r3, 6
 56a:	0d c0       	rjmp	.+26     	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 56c:	23 2d       	mov	r18, r3
 56e:	2e 7f       	andi	r18, 0xFE	; 254
 570:	a2 2e       	mov	r10, r18
 572:	89 14       	cp	r8, r9
 574:	58 f4       	brcc	.+22     	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 576:	34 fe       	sbrs	r3, 4
 578:	0b c0       	rjmp	.+22     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 57a:	32 fc       	sbrc	r3, 2
 57c:	09 c0       	rjmp	.+18     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 57e:	83 2d       	mov	r24, r3
 580:	8e 7e       	andi	r24, 0xEE	; 238
 582:	a8 2e       	mov	r10, r24
 584:	05 c0       	rjmp	.+10     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 586:	b8 2c       	mov	r11, r8
 588:	a3 2c       	mov	r10, r3
 58a:	03 c0       	rjmp	.+6      	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 58c:	b8 2c       	mov	r11, r8
 58e:	01 c0       	rjmp	.+2      	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 590:	b9 2c       	mov	r11, r9
 592:	a4 fe       	sbrs	r10, 4
 594:	0f c0       	rjmp	.+30     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 596:	fe 01       	movw	r30, r28
 598:	e8 0d       	add	r30, r8
 59a:	f1 1d       	adc	r31, r1
 59c:	80 81       	ld	r24, Z
 59e:	80 33       	cpi	r24, 0x30	; 48
 5a0:	21 f4       	brne	.+8      	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 5a2:	9a 2d       	mov	r25, r10
 5a4:	99 7e       	andi	r25, 0xE9	; 233
 5a6:	a9 2e       	mov	r10, r25
 5a8:	09 c0       	rjmp	.+18     	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 5aa:	a2 fe       	sbrs	r10, 2
 5ac:	06 c0       	rjmp	.+12     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5ae:	b3 94       	inc	r11
 5b0:	b3 94       	inc	r11
 5b2:	04 c0       	rjmp	.+8      	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 5b4:	8a 2d       	mov	r24, r10
 5b6:	86 78       	andi	r24, 0x86	; 134
 5b8:	09 f0       	breq	.+2      	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 5ba:	b3 94       	inc	r11
 5bc:	a3 fc       	sbrc	r10, 3
 5be:	11 c0       	rjmp	.+34     	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5c0:	a0 fe       	sbrs	r10, 0
 5c2:	06 c0       	rjmp	.+12     	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5c4:	b2 14       	cp	r11, r2
 5c6:	88 f4       	brcc	.+34     	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5c8:	28 0c       	add	r2, r8
 5ca:	92 2c       	mov	r9, r2
 5cc:	9b 18       	sub	r9, r11
 5ce:	0e c0       	rjmp	.+28     	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5d0:	b2 14       	cp	r11, r2
 5d2:	60 f4       	brcc	.+24     	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5d4:	b6 01       	movw	r22, r12
 5d6:	80 e2       	ldi	r24, 0x20	; 32
 5d8:	90 e0       	ldi	r25, 0x00	; 0
 5da:	0e 94 55 03 	call	0x6aa	; 0x6aa <fputc>
 5de:	b3 94       	inc	r11
 5e0:	f7 cf       	rjmp	.-18     	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5e2:	b2 14       	cp	r11, r2
 5e4:	18 f4       	brcc	.+6      	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5e6:	2b 18       	sub	r2, r11
 5e8:	02 c0       	rjmp	.+4      	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 5ea:	98 2c       	mov	r9, r8
 5ec:	21 2c       	mov	r2, r1
 5ee:	a4 fe       	sbrs	r10, 4
 5f0:	10 c0       	rjmp	.+32     	; 0x612 <__LOCK_REGION_LENGTH__+0x212>
 5f2:	b6 01       	movw	r22, r12
 5f4:	80 e3       	ldi	r24, 0x30	; 48
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	0e 94 55 03 	call	0x6aa	; 0x6aa <fputc>
 5fc:	a2 fe       	sbrs	r10, 2
 5fe:	17 c0       	rjmp	.+46     	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 600:	a1 fc       	sbrc	r10, 1
 602:	03 c0       	rjmp	.+6      	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
 604:	88 e7       	ldi	r24, 0x78	; 120
 606:	90 e0       	ldi	r25, 0x00	; 0
 608:	02 c0       	rjmp	.+4      	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 60a:	88 e5       	ldi	r24, 0x58	; 88
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	b6 01       	movw	r22, r12
 610:	0c c0       	rjmp	.+24     	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 612:	8a 2d       	mov	r24, r10
 614:	86 78       	andi	r24, 0x86	; 134
 616:	59 f0       	breq	.+22     	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 618:	a1 fe       	sbrs	r10, 1
 61a:	02 c0       	rjmp	.+4      	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
 61c:	8b e2       	ldi	r24, 0x2B	; 43
 61e:	01 c0       	rjmp	.+2      	; 0x622 <__LOCK_REGION_LENGTH__+0x222>
 620:	80 e2       	ldi	r24, 0x20	; 32
 622:	a7 fc       	sbrc	r10, 7
 624:	8d e2       	ldi	r24, 0x2D	; 45
 626:	b6 01       	movw	r22, r12
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	0e 94 55 03 	call	0x6aa	; 0x6aa <fputc>
 62e:	89 14       	cp	r8, r9
 630:	38 f4       	brcc	.+14     	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 632:	b6 01       	movw	r22, r12
 634:	80 e3       	ldi	r24, 0x30	; 48
 636:	90 e0       	ldi	r25, 0x00	; 0
 638:	0e 94 55 03 	call	0x6aa	; 0x6aa <fputc>
 63c:	9a 94       	dec	r9
 63e:	f7 cf       	rjmp	.-18     	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 640:	8a 94       	dec	r8
 642:	f3 01       	movw	r30, r6
 644:	e8 0d       	add	r30, r8
 646:	f1 1d       	adc	r31, r1
 648:	80 81       	ld	r24, Z
 64a:	b6 01       	movw	r22, r12
 64c:	90 e0       	ldi	r25, 0x00	; 0
 64e:	0e 94 55 03 	call	0x6aa	; 0x6aa <fputc>
 652:	81 10       	cpse	r8, r1
 654:	f5 cf       	rjmp	.-22     	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 656:	22 20       	and	r2, r2
 658:	09 f4       	brne	.+2      	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 65a:	42 ce       	rjmp	.-892    	; 0x2e0 <vfprintf+0x24>
 65c:	b6 01       	movw	r22, r12
 65e:	80 e2       	ldi	r24, 0x20	; 32
 660:	90 e0       	ldi	r25, 0x00	; 0
 662:	0e 94 55 03 	call	0x6aa	; 0x6aa <fputc>
 666:	2a 94       	dec	r2
 668:	f6 cf       	rjmp	.-20     	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
 66a:	f6 01       	movw	r30, r12
 66c:	86 81       	ldd	r24, Z+6	; 0x06
 66e:	97 81       	ldd	r25, Z+7	; 0x07
 670:	02 c0       	rjmp	.+4      	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 672:	8f ef       	ldi	r24, 0xFF	; 255
 674:	9f ef       	ldi	r25, 0xFF	; 255
 676:	2b 96       	adiw	r28, 0x0b	; 11
 678:	e2 e1       	ldi	r30, 0x12	; 18
 67a:	0c 94 0b 04 	jmp	0x816	; 0x816 <__epilogue_restores__>

0000067e <strnlen_P>:
 67e:	fc 01       	movw	r30, r24
 680:	05 90       	lpm	r0, Z+
 682:	61 50       	subi	r22, 0x01	; 1
 684:	70 40       	sbci	r23, 0x00	; 0
 686:	01 10       	cpse	r0, r1
 688:	d8 f7       	brcc	.-10     	; 0x680 <strnlen_P+0x2>
 68a:	80 95       	com	r24
 68c:	90 95       	com	r25
 68e:	8e 0f       	add	r24, r30
 690:	9f 1f       	adc	r25, r31
 692:	08 95       	ret

00000694 <strnlen>:
 694:	fc 01       	movw	r30, r24
 696:	61 50       	subi	r22, 0x01	; 1
 698:	70 40       	sbci	r23, 0x00	; 0
 69a:	01 90       	ld	r0, Z+
 69c:	01 10       	cpse	r0, r1
 69e:	d8 f7       	brcc	.-10     	; 0x696 <strnlen+0x2>
 6a0:	80 95       	com	r24
 6a2:	90 95       	com	r25
 6a4:	8e 0f       	add	r24, r30
 6a6:	9f 1f       	adc	r25, r31
 6a8:	08 95       	ret

000006aa <fputc>:
 6aa:	0f 93       	push	r16
 6ac:	1f 93       	push	r17
 6ae:	cf 93       	push	r28
 6b0:	df 93       	push	r29
 6b2:	fb 01       	movw	r30, r22
 6b4:	23 81       	ldd	r18, Z+3	; 0x03
 6b6:	21 fd       	sbrc	r18, 1
 6b8:	03 c0       	rjmp	.+6      	; 0x6c0 <fputc+0x16>
 6ba:	8f ef       	ldi	r24, 0xFF	; 255
 6bc:	9f ef       	ldi	r25, 0xFF	; 255
 6be:	2c c0       	rjmp	.+88     	; 0x718 <fputc+0x6e>
 6c0:	22 ff       	sbrs	r18, 2
 6c2:	16 c0       	rjmp	.+44     	; 0x6f0 <fputc+0x46>
 6c4:	46 81       	ldd	r20, Z+6	; 0x06
 6c6:	57 81       	ldd	r21, Z+7	; 0x07
 6c8:	24 81       	ldd	r18, Z+4	; 0x04
 6ca:	35 81       	ldd	r19, Z+5	; 0x05
 6cc:	42 17       	cp	r20, r18
 6ce:	53 07       	cpc	r21, r19
 6d0:	44 f4       	brge	.+16     	; 0x6e2 <fputc+0x38>
 6d2:	a0 81       	ld	r26, Z
 6d4:	b1 81       	ldd	r27, Z+1	; 0x01
 6d6:	9d 01       	movw	r18, r26
 6d8:	2f 5f       	subi	r18, 0xFF	; 255
 6da:	3f 4f       	sbci	r19, 0xFF	; 255
 6dc:	31 83       	std	Z+1, r19	; 0x01
 6de:	20 83       	st	Z, r18
 6e0:	8c 93       	st	X, r24
 6e2:	26 81       	ldd	r18, Z+6	; 0x06
 6e4:	37 81       	ldd	r19, Z+7	; 0x07
 6e6:	2f 5f       	subi	r18, 0xFF	; 255
 6e8:	3f 4f       	sbci	r19, 0xFF	; 255
 6ea:	37 83       	std	Z+7, r19	; 0x07
 6ec:	26 83       	std	Z+6, r18	; 0x06
 6ee:	14 c0       	rjmp	.+40     	; 0x718 <fputc+0x6e>
 6f0:	8b 01       	movw	r16, r22
 6f2:	ec 01       	movw	r28, r24
 6f4:	fb 01       	movw	r30, r22
 6f6:	00 84       	ldd	r0, Z+8	; 0x08
 6f8:	f1 85       	ldd	r31, Z+9	; 0x09
 6fa:	e0 2d       	mov	r30, r0
 6fc:	09 95       	icall
 6fe:	89 2b       	or	r24, r25
 700:	e1 f6       	brne	.-72     	; 0x6ba <fputc+0x10>
 702:	d8 01       	movw	r26, r16
 704:	16 96       	adiw	r26, 0x06	; 6
 706:	8d 91       	ld	r24, X+
 708:	9c 91       	ld	r25, X
 70a:	17 97       	sbiw	r26, 0x07	; 7
 70c:	01 96       	adiw	r24, 0x01	; 1
 70e:	17 96       	adiw	r26, 0x07	; 7
 710:	9c 93       	st	X, r25
 712:	8e 93       	st	-X, r24
 714:	16 97       	sbiw	r26, 0x06	; 6
 716:	ce 01       	movw	r24, r28
 718:	df 91       	pop	r29
 71a:	cf 91       	pop	r28
 71c:	1f 91       	pop	r17
 71e:	0f 91       	pop	r16
 720:	08 95       	ret

00000722 <__ultoa_invert>:
 722:	fa 01       	movw	r30, r20
 724:	aa 27       	eor	r26, r26
 726:	28 30       	cpi	r18, 0x08	; 8
 728:	51 f1       	breq	.+84     	; 0x77e <__ultoa_invert+0x5c>
 72a:	20 31       	cpi	r18, 0x10	; 16
 72c:	81 f1       	breq	.+96     	; 0x78e <__ultoa_invert+0x6c>
 72e:	e8 94       	clt
 730:	6f 93       	push	r22
 732:	6e 7f       	andi	r22, 0xFE	; 254
 734:	6e 5f       	subi	r22, 0xFE	; 254
 736:	7f 4f       	sbci	r23, 0xFF	; 255
 738:	8f 4f       	sbci	r24, 0xFF	; 255
 73a:	9f 4f       	sbci	r25, 0xFF	; 255
 73c:	af 4f       	sbci	r26, 0xFF	; 255
 73e:	b1 e0       	ldi	r27, 0x01	; 1
 740:	3e d0       	rcall	.+124    	; 0x7be <__ultoa_invert+0x9c>
 742:	b4 e0       	ldi	r27, 0x04	; 4
 744:	3c d0       	rcall	.+120    	; 0x7be <__ultoa_invert+0x9c>
 746:	67 0f       	add	r22, r23
 748:	78 1f       	adc	r23, r24
 74a:	89 1f       	adc	r24, r25
 74c:	9a 1f       	adc	r25, r26
 74e:	a1 1d       	adc	r26, r1
 750:	68 0f       	add	r22, r24
 752:	79 1f       	adc	r23, r25
 754:	8a 1f       	adc	r24, r26
 756:	91 1d       	adc	r25, r1
 758:	a1 1d       	adc	r26, r1
 75a:	6a 0f       	add	r22, r26
 75c:	71 1d       	adc	r23, r1
 75e:	81 1d       	adc	r24, r1
 760:	91 1d       	adc	r25, r1
 762:	a1 1d       	adc	r26, r1
 764:	20 d0       	rcall	.+64     	; 0x7a6 <__ultoa_invert+0x84>
 766:	09 f4       	brne	.+2      	; 0x76a <__ultoa_invert+0x48>
 768:	68 94       	set
 76a:	3f 91       	pop	r19
 76c:	2a e0       	ldi	r18, 0x0A	; 10
 76e:	26 9f       	mul	r18, r22
 770:	11 24       	eor	r1, r1
 772:	30 19       	sub	r19, r0
 774:	30 5d       	subi	r19, 0xD0	; 208
 776:	31 93       	st	Z+, r19
 778:	de f6       	brtc	.-74     	; 0x730 <__ultoa_invert+0xe>
 77a:	cf 01       	movw	r24, r30
 77c:	08 95       	ret
 77e:	46 2f       	mov	r20, r22
 780:	47 70       	andi	r20, 0x07	; 7
 782:	40 5d       	subi	r20, 0xD0	; 208
 784:	41 93       	st	Z+, r20
 786:	b3 e0       	ldi	r27, 0x03	; 3
 788:	0f d0       	rcall	.+30     	; 0x7a8 <__ultoa_invert+0x86>
 78a:	c9 f7       	brne	.-14     	; 0x77e <__ultoa_invert+0x5c>
 78c:	f6 cf       	rjmp	.-20     	; 0x77a <__ultoa_invert+0x58>
 78e:	46 2f       	mov	r20, r22
 790:	4f 70       	andi	r20, 0x0F	; 15
 792:	40 5d       	subi	r20, 0xD0	; 208
 794:	4a 33       	cpi	r20, 0x3A	; 58
 796:	18 f0       	brcs	.+6      	; 0x79e <__ultoa_invert+0x7c>
 798:	49 5d       	subi	r20, 0xD9	; 217
 79a:	31 fd       	sbrc	r19, 1
 79c:	40 52       	subi	r20, 0x20	; 32
 79e:	41 93       	st	Z+, r20
 7a0:	02 d0       	rcall	.+4      	; 0x7a6 <__ultoa_invert+0x84>
 7a2:	a9 f7       	brne	.-22     	; 0x78e <__ultoa_invert+0x6c>
 7a4:	ea cf       	rjmp	.-44     	; 0x77a <__ultoa_invert+0x58>
 7a6:	b4 e0       	ldi	r27, 0x04	; 4
 7a8:	a6 95       	lsr	r26
 7aa:	97 95       	ror	r25
 7ac:	87 95       	ror	r24
 7ae:	77 95       	ror	r23
 7b0:	67 95       	ror	r22
 7b2:	ba 95       	dec	r27
 7b4:	c9 f7       	brne	.-14     	; 0x7a8 <__ultoa_invert+0x86>
 7b6:	00 97       	sbiw	r24, 0x00	; 0
 7b8:	61 05       	cpc	r22, r1
 7ba:	71 05       	cpc	r23, r1
 7bc:	08 95       	ret
 7be:	9b 01       	movw	r18, r22
 7c0:	ac 01       	movw	r20, r24
 7c2:	0a 2e       	mov	r0, r26
 7c4:	06 94       	lsr	r0
 7c6:	57 95       	ror	r21
 7c8:	47 95       	ror	r20
 7ca:	37 95       	ror	r19
 7cc:	27 95       	ror	r18
 7ce:	ba 95       	dec	r27
 7d0:	c9 f7       	brne	.-14     	; 0x7c4 <__ultoa_invert+0xa2>
 7d2:	62 0f       	add	r22, r18
 7d4:	73 1f       	adc	r23, r19
 7d6:	84 1f       	adc	r24, r20
 7d8:	95 1f       	adc	r25, r21
 7da:	a0 1d       	adc	r26, r0
 7dc:	08 95       	ret

000007de <__prologue_saves__>:
 7de:	2f 92       	push	r2
 7e0:	3f 92       	push	r3
 7e2:	4f 92       	push	r4
 7e4:	5f 92       	push	r5
 7e6:	6f 92       	push	r6
 7e8:	7f 92       	push	r7
 7ea:	8f 92       	push	r8
 7ec:	9f 92       	push	r9
 7ee:	af 92       	push	r10
 7f0:	bf 92       	push	r11
 7f2:	cf 92       	push	r12
 7f4:	df 92       	push	r13
 7f6:	ef 92       	push	r14
 7f8:	ff 92       	push	r15
 7fa:	0f 93       	push	r16
 7fc:	1f 93       	push	r17
 7fe:	cf 93       	push	r28
 800:	df 93       	push	r29
 802:	cd b7       	in	r28, 0x3d	; 61
 804:	de b7       	in	r29, 0x3e	; 62
 806:	ca 1b       	sub	r28, r26
 808:	db 0b       	sbc	r29, r27
 80a:	0f b6       	in	r0, 0x3f	; 63
 80c:	f8 94       	cli
 80e:	de bf       	out	0x3e, r29	; 62
 810:	0f be       	out	0x3f, r0	; 63
 812:	cd bf       	out	0x3d, r28	; 61
 814:	09 94       	ijmp

00000816 <__epilogue_restores__>:
 816:	2a 88       	ldd	r2, Y+18	; 0x12
 818:	39 88       	ldd	r3, Y+17	; 0x11
 81a:	48 88       	ldd	r4, Y+16	; 0x10
 81c:	5f 84       	ldd	r5, Y+15	; 0x0f
 81e:	6e 84       	ldd	r6, Y+14	; 0x0e
 820:	7d 84       	ldd	r7, Y+13	; 0x0d
 822:	8c 84       	ldd	r8, Y+12	; 0x0c
 824:	9b 84       	ldd	r9, Y+11	; 0x0b
 826:	aa 84       	ldd	r10, Y+10	; 0x0a
 828:	b9 84       	ldd	r11, Y+9	; 0x09
 82a:	c8 84       	ldd	r12, Y+8	; 0x08
 82c:	df 80       	ldd	r13, Y+7	; 0x07
 82e:	ee 80       	ldd	r14, Y+6	; 0x06
 830:	fd 80       	ldd	r15, Y+5	; 0x05
 832:	0c 81       	ldd	r16, Y+4	; 0x04
 834:	1b 81       	ldd	r17, Y+3	; 0x03
 836:	aa 81       	ldd	r26, Y+2	; 0x02
 838:	b9 81       	ldd	r27, Y+1	; 0x01
 83a:	ce 0f       	add	r28, r30
 83c:	d1 1d       	adc	r29, r1
 83e:	0f b6       	in	r0, 0x3f	; 63
 840:	f8 94       	cli
 842:	de bf       	out	0x3e, r29	; 62
 844:	0f be       	out	0x3f, r0	; 63
 846:	cd bf       	out	0x3d, r28	; 61
 848:	ed 01       	movw	r28, r26
 84a:	08 95       	ret

0000084c <_exit>:
 84c:	f8 94       	cli

0000084e <__stop_program>:
 84e:	ff cf       	rjmp	.-2      	; 0x84e <__stop_program>
