
OUTPUT ON LCD POLLING.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000802  00000876  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000802  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  0000087c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000008d8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  00000914  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b8d  00000000  00000000  0000096c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000921  00000000  00000000  000014f9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000408  00000000  00000000  00001e1a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000c0  00000000  00000000  00002224  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000462  00000000  00000000  000022e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002ae  00000000  00000000  00002746  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  000029f4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  70:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  7c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  80:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  84:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  88:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 e0       	ldi	r30, 0x02	; 2
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <__do_copy_data+0x10>
  a4:	05 90       	lpm	r0, Z+
  a6:	0d 92       	st	X+, r0
  a8:	a6 30       	cpi	r26, 0x06	; 6
  aa:	b1 07       	cpc	r27, r17
  ac:	d9 f7       	brne	.-10     	; 0xa4 <__do_copy_data+0xc>
  ae:	0e 94 c8 00 	call	0x190	; 0x190 <main>
  b2:	0c 94 ff 03 	jmp	0x7fe	; 0x7fe <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <adc_init>:
}
void adc_init()

{   //ADC0 IS SELECTED BY SETTING MUX5:0 TO ZERO.
	// Vref set to 5 volt and 8 bits in higher ADCH and 2 bits in lower ADCL
	ADMUX |= (1<<REFS0);
  ba:	3e 9a       	sbi	0x07, 6	; 7
	//prescaler set to 128 that is 125 KHz adc clk freq
	ADCSRA |=(1<<ADEN)|(1<<ADPS0)|(1<<ADPS1)|(1<<ADPS2);
  bc:	86 b1       	in	r24, 0x06	; 6
  be:	87 68       	ori	r24, 0x87	; 135
  c0:	86 b9       	out	0x06, r24	; 6
  c2:	08 95       	ret

000000c4 <adc_start>:
	//ADCSRB -> ADTS2:0  free running mode -- set to zero
}
unsigned int adc_start()
{
	//to set start conversion bit of reg ADCSRA
	ADCSRA |=(1<<ADSC);
  c4:	36 9a       	sbi	0x06, 6	; 6
	//To check if conversion is completed or not
	while(!(ADCSRA &(1<<ADIF)));
  c6:	34 9b       	sbis	0x06, 4	; 6
  c8:	fe cf       	rjmp	.-4      	; 0xc6 <adc_start+0x2>
	//PORTC = ADC;
	return ADC;
  ca:	84 b1       	in	r24, 0x04	; 4
  cc:	95 b1       	in	r25, 0x05	; 5
}
  ce:	08 95       	ret

000000d0 <en>:
	en();                                         // lcd_port data copy to lcd
}
void en(){
	
	//lcd enable for latching data
	LCD_PORT|=(1<<EN);                           
  d0:	da 9a       	sbi	0x1b, 2	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d2:	8f e5       	ldi	r24, 0x5F	; 95
  d4:	9a ee       	ldi	r25, 0xEA	; 234
  d6:	01 97       	sbiw	r24, 0x01	; 1
  d8:	f1 f7       	brne	.-4      	; 0xd6 <en+0x6>
  da:	00 c0       	rjmp	.+0      	; 0xdc <en+0xc>
  dc:	00 00       	nop
	_delay_ms(15);
	LCD_PORT&=~(1<<EN);                          
  de:	da 98       	cbi	0x1b, 2	; 27
  e0:	8f e1       	ldi	r24, 0x1F	; 31
  e2:	9e e4       	ldi	r25, 0x4E	; 78
  e4:	01 97       	sbiw	r24, 0x01	; 1
  e6:	f1 f7       	brne	.-4      	; 0xe4 <en+0x14>
  e8:	00 c0       	rjmp	.+0      	; 0xea <en+0x1a>
  ea:	00 00       	nop
  ec:	08 95       	ret

000000ee <lcd_cmd>:
}

//==============================================


void lcd_cmd(unsigned int COMMAND){
  ee:	cf 93       	push	r28
  f0:	c8 2f       	mov	r28, r24
	
	LCD_PORT=(COMMAND & 0xf0);                   //msb data copy to lcd_port
  f2:	80 7f       	andi	r24, 0xF0	; 240
  f4:	8b bb       	out	0x1b, r24	; 27
	en();                                        // lcd_port data copy to lcd
  f6:	0e 94 68 00 	call	0xd0	; 0xd0 <en>
	LCD_PORT=((COMMAND & 0x0f)<<4);              //lsb data shifted by 4
  fa:	c2 95       	swap	r28
  fc:	c0 7f       	andi	r28, 0xF0	; 240
  fe:	cb bb       	out	0x1b, r28	; 27
	en();                                        // lcd_port data copy to lcd
 100:	0e 94 68 00 	call	0xd0	; 0xd0 <en>
}
 104:	cf 91       	pop	r28
 106:	08 95       	ret

00000108 <lcd_data>:
void lcd_data(unsigned char DATA){
 108:	cf 93       	push	r28
 10a:	c8 2f       	mov	r28, r24
	
	LCD_PORT=(DATA & 0xf0)|(1<<RS);               //msb data copy to lcd_port
 10c:	80 7f       	andi	r24, 0xF0	; 240
 10e:	81 60       	ori	r24, 0x01	; 1
 110:	8b bb       	out	0x1b, r24	; 27
	en();                                         // lcd_port data copy to lcd
 112:	0e 94 68 00 	call	0xd0	; 0xd0 <en>
	LCD_PORT=((DATA )<<4)|(1<<RS);                //lsb data shifted by 4
 116:	20 e1       	ldi	r18, 0x10	; 16
 118:	c2 9f       	mul	r28, r18
 11a:	c0 01       	movw	r24, r0
 11c:	11 24       	eor	r1, r1
 11e:	81 60       	ori	r24, 0x01	; 1
 120:	8b bb       	out	0x1b, r24	; 27
	en();                                         // lcd_port data copy to lcd
 122:	0e 94 68 00 	call	0xd0	; 0xd0 <en>
}
 126:	cf 91       	pop	r28
 128:	08 95       	ret

0000012a <lcd_init>:
 12a:	2f ef       	ldi	r18, 0xFF	; 255
 12c:	89 ef       	ldi	r24, 0xF9	; 249
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	21 50       	subi	r18, 0x01	; 1
 132:	80 40       	sbci	r24, 0x00	; 0
 134:	90 40       	sbci	r25, 0x00	; 0
 136:	e1 f7       	brne	.-8      	; 0x130 <lcd_init+0x6>
 138:	00 c0       	rjmp	.+0      	; 0x13a <lcd_init+0x10>
 13a:	00 00       	nop
	LCD_PORT&=~(1<<EN);                          
	_delay_ms(5);
}
void lcd_init(){
	_delay_ms(20);         //power on delay for lcd
	DDRA=0xf5;             // set port as a lcd outport 11110101
 13c:	85 ef       	ldi	r24, 0xF5	; 245
 13e:	8a bb       	out	0x1a, r24	; 26
	lcd_cmd(0x02);         //Return home
 140:	82 e0       	ldi	r24, 0x02	; 2
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	0e 94 77 00 	call	0xee	; 0xee <lcd_cmd>
	lcd_cmd(0X28);         //2 lines and 5×7 matrix (4-bit mode)
 148:	88 e2       	ldi	r24, 0x28	; 40
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	0e 94 77 00 	call	0xee	; 0xee <lcd_cmd>
	lcd_cmd(0X01);         //Clear display screen
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	0e 94 77 00 	call	0xee	; 0xee <lcd_cmd>
	lcd_cmd(0X0f);
 158:	8f e0       	ldi	r24, 0x0F	; 15
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	0e 94 77 00 	call	0xee	; 0xee <lcd_cmd>
	lcd_cmd(0X06);         //Increment cursor (shift cursor to right)
 160:	86 e0       	ldi	r24, 0x06	; 6
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	0e 94 77 00 	call	0xee	; 0xee <lcd_cmd>
	lcd_cmd(0X80);         //Force cursor to beginning to 1st line
 168:	80 e8       	ldi	r24, 0x80	; 128
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	0e 94 77 00 	call	0xee	; 0xee <lcd_cmd>
 170:	08 95       	ret

00000172 <lcd_string>:
}
void lcd_string(char * str){
 172:	cf 93       	push	r28
 174:	df 93       	push	r29
 176:	ec 01       	movw	r28, r24
	for(unsigned int i=0;str[i]!='\0';i++){
 178:	88 81       	ld	r24, Y
 17a:	88 23       	and	r24, r24
 17c:	31 f0       	breq	.+12     	; 0x18a <lcd_string+0x18>
 17e:	21 96       	adiw	r28, 0x01	; 1
		lcd_data(str[i]);
 180:	0e 94 84 00 	call	0x108	; 0x108 <lcd_data>
	lcd_cmd(0X0f);
	lcd_cmd(0X06);         //Increment cursor (shift cursor to right)
	lcd_cmd(0X80);         //Force cursor to beginning to 1st line
}
void lcd_string(char * str){
	for(unsigned int i=0;str[i]!='\0';i++){
 184:	89 91       	ld	r24, Y+
 186:	81 11       	cpse	r24, r1
 188:	fb cf       	rjmp	.-10     	; 0x180 <lcd_string+0xe>
		lcd_data(str[i]);
	}
 18a:	df 91       	pop	r29
 18c:	cf 91       	pop	r28
 18e:	08 95       	ret

00000190 <main>:
void lcd_init();                        //lcd initialization function
void en();                              //enable function for lcd
void lcd_string(char *);                //string function for lcd
//=======================================
int main(void)
{
 190:	cf 93       	push	r28
 192:	df 93       	push	r29
 194:	cd b7       	in	r28, 0x3d	; 61
 196:	de b7       	in	r29, 0x3e	; 62
 198:	2a 97       	sbiw	r28, 0x0a	; 10
 19a:	0f b6       	in	r0, 0x3f	; 63
 19c:	f8 94       	cli
 19e:	de bf       	out	0x3e, r29	; 62
 1a0:	0f be       	out	0x3f, r0	; 63
 1a2:	cd bf       	out	0x3d, r28	; 61
	
	char buf1[10];
	unsigned int DOUT=0;
	DDRC=0xff;
 1a4:	8f ef       	ldi	r24, 0xFF	; 255
 1a6:	84 bb       	out	0x14, r24	; 20
	unsigned int data;
	lcd_init();
 1a8:	0e 94 95 00 	call	0x12a	; 0x12a <lcd_init>
	adc_init();
 1ac:	0e 94 5d 00 	call	0xba	; 0xba <adc_init>
		data=adc_start();
		//calculation of digital output
		DOUT=(data*(5000/1024));
		
		//snprintf() function formats and stores a series of characters and values in the array buffer.
		snprintf(buf1, 10, "%dmv",DOUT);
 1b0:	0f 2e       	mov	r0, r31
 1b2:	f0 e0       	ldi	r31, 0x00	; 0
 1b4:	ef 2e       	mov	r14, r31
 1b6:	f1 e0       	ldi	r31, 0x01	; 1
 1b8:	ff 2e       	mov	r15, r31
 1ba:	f0 2d       	mov	r31, r0
 1bc:	0f 2e       	mov	r0, r31
 1be:	fa e0       	ldi	r31, 0x0A	; 10
 1c0:	df 2e       	mov	r13, r31
 1c2:	f0 2d       	mov	r31, r0
 1c4:	8e 01       	movw	r16, r28
 1c6:	0f 5f       	subi	r16, 0xFF	; 255
 1c8:	1f 4f       	sbci	r17, 0xFF	; 255
	lcd_init();
	adc_init();
	while (1)
	{
		// ADC conversion result is catching into data variable
		data=adc_start();
 1ca:	0e 94 62 00 	call	0xc4	; 0xc4 <adc_start>
		//calculation of digital output
		DOUT=(data*(5000/1024));
		
		//snprintf() function formats and stores a series of characters and values in the array buffer.
		snprintf(buf1, 10, "%dmv",DOUT);
 1ce:	88 0f       	add	r24, r24
 1d0:	99 1f       	adc	r25, r25
 1d2:	88 0f       	add	r24, r24
 1d4:	99 1f       	adc	r25, r25
 1d6:	9f 93       	push	r25
 1d8:	8f 93       	push	r24
 1da:	ff 92       	push	r15
 1dc:	ef 92       	push	r14
 1de:	1f 92       	push	r1
 1e0:	df 92       	push	r13
 1e2:	1f 93       	push	r17
 1e4:	0f 93       	push	r16
 1e6:	0e 94 07 01 	call	0x20e	; 0x20e <snprintf>
		lcd_string(buf1);
 1ea:	c8 01       	movw	r24, r16
 1ec:	0e 94 b9 00 	call	0x172	; 0x172 <lcd_string>
 1f0:	2f ef       	ldi	r18, 0xFF	; 255
 1f2:	83 ed       	ldi	r24, 0xD3	; 211
 1f4:	90 e3       	ldi	r25, 0x30	; 48
 1f6:	21 50       	subi	r18, 0x01	; 1
 1f8:	80 40       	sbci	r24, 0x00	; 0
 1fa:	90 40       	sbci	r25, 0x00	; 0
 1fc:	e1 f7       	brne	.-8      	; 0x1f6 <main+0x66>
 1fe:	00 c0       	rjmp	.+0      	; 0x200 <main+0x70>
 200:	00 00       	nop
 202:	0f b6       	in	r0, 0x3f	; 63
 204:	f8 94       	cli
 206:	de bf       	out	0x3e, r29	; 62
 208:	0f be       	out	0x3f, r0	; 63
 20a:	cd bf       	out	0x3d, r28	; 61
 20c:	de cf       	rjmp	.-68     	; 0x1ca <main+0x3a>

0000020e <snprintf>:
 20e:	ae e0       	ldi	r26, 0x0E	; 14
 210:	b0 e0       	ldi	r27, 0x00	; 0
 212:	ed e0       	ldi	r30, 0x0D	; 13
 214:	f1 e0       	ldi	r31, 0x01	; 1
 216:	0c 94 d6 03 	jmp	0x7ac	; 0x7ac <__prologue_saves__+0x1c>
 21a:	0d 89       	ldd	r16, Y+21	; 0x15
 21c:	1e 89       	ldd	r17, Y+22	; 0x16
 21e:	8f 89       	ldd	r24, Y+23	; 0x17
 220:	98 8d       	ldd	r25, Y+24	; 0x18
 222:	26 e0       	ldi	r18, 0x06	; 6
 224:	2c 83       	std	Y+4, r18	; 0x04
 226:	1a 83       	std	Y+2, r17	; 0x02
 228:	09 83       	std	Y+1, r16	; 0x01
 22a:	97 ff       	sbrs	r25, 7
 22c:	02 c0       	rjmp	.+4      	; 0x232 <snprintf+0x24>
 22e:	80 e0       	ldi	r24, 0x00	; 0
 230:	90 e8       	ldi	r25, 0x80	; 128
 232:	01 97       	sbiw	r24, 0x01	; 1
 234:	9e 83       	std	Y+6, r25	; 0x06
 236:	8d 83       	std	Y+5, r24	; 0x05
 238:	ae 01       	movw	r20, r28
 23a:	45 5e       	subi	r20, 0xE5	; 229
 23c:	5f 4f       	sbci	r21, 0xFF	; 255
 23e:	69 8d       	ldd	r22, Y+25	; 0x19
 240:	7a 8d       	ldd	r23, Y+26	; 0x1a
 242:	ce 01       	movw	r24, r28
 244:	01 96       	adiw	r24, 0x01	; 1
 246:	0e 94 37 01 	call	0x26e	; 0x26e <vfprintf>
 24a:	4d 81       	ldd	r20, Y+5	; 0x05
 24c:	5e 81       	ldd	r21, Y+6	; 0x06
 24e:	57 fd       	sbrc	r21, 7
 250:	0a c0       	rjmp	.+20     	; 0x266 <snprintf+0x58>
 252:	2f 81       	ldd	r18, Y+7	; 0x07
 254:	38 85       	ldd	r19, Y+8	; 0x08
 256:	42 17       	cp	r20, r18
 258:	53 07       	cpc	r21, r19
 25a:	0c f4       	brge	.+2      	; 0x25e <snprintf+0x50>
 25c:	9a 01       	movw	r18, r20
 25e:	f8 01       	movw	r30, r16
 260:	e2 0f       	add	r30, r18
 262:	f3 1f       	adc	r31, r19
 264:	10 82       	st	Z, r1
 266:	2e 96       	adiw	r28, 0x0e	; 14
 268:	e4 e0       	ldi	r30, 0x04	; 4
 26a:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__epilogue_restores__+0x1c>

0000026e <vfprintf>:
 26e:	ab e0       	ldi	r26, 0x0B	; 11
 270:	b0 e0       	ldi	r27, 0x00	; 0
 272:	ed e3       	ldi	r30, 0x3D	; 61
 274:	f1 e0       	ldi	r31, 0x01	; 1
 276:	0c 94 c8 03 	jmp	0x790	; 0x790 <__prologue_saves__>
 27a:	6c 01       	movw	r12, r24
 27c:	7b 01       	movw	r14, r22
 27e:	8a 01       	movw	r16, r20
 280:	fc 01       	movw	r30, r24
 282:	17 82       	std	Z+7, r1	; 0x07
 284:	16 82       	std	Z+6, r1	; 0x06
 286:	83 81       	ldd	r24, Z+3	; 0x03
 288:	81 ff       	sbrs	r24, 1
 28a:	cc c1       	rjmp	.+920    	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 28c:	ce 01       	movw	r24, r28
 28e:	01 96       	adiw	r24, 0x01	; 1
 290:	3c 01       	movw	r6, r24
 292:	f6 01       	movw	r30, r12
 294:	93 81       	ldd	r25, Z+3	; 0x03
 296:	f7 01       	movw	r30, r14
 298:	93 fd       	sbrc	r25, 3
 29a:	85 91       	lpm	r24, Z+
 29c:	93 ff       	sbrs	r25, 3
 29e:	81 91       	ld	r24, Z+
 2a0:	7f 01       	movw	r14, r30
 2a2:	88 23       	and	r24, r24
 2a4:	09 f4       	brne	.+2      	; 0x2a8 <vfprintf+0x3a>
 2a6:	ba c1       	rjmp	.+884    	; 0x61c <__LOCK_REGION_LENGTH__+0x21c>
 2a8:	85 32       	cpi	r24, 0x25	; 37
 2aa:	39 f4       	brne	.+14     	; 0x2ba <vfprintf+0x4c>
 2ac:	93 fd       	sbrc	r25, 3
 2ae:	85 91       	lpm	r24, Z+
 2b0:	93 ff       	sbrs	r25, 3
 2b2:	81 91       	ld	r24, Z+
 2b4:	7f 01       	movw	r14, r30
 2b6:	85 32       	cpi	r24, 0x25	; 37
 2b8:	29 f4       	brne	.+10     	; 0x2c4 <vfprintf+0x56>
 2ba:	b6 01       	movw	r22, r12
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	0e 94 2e 03 	call	0x65c	; 0x65c <fputc>
 2c2:	e7 cf       	rjmp	.-50     	; 0x292 <vfprintf+0x24>
 2c4:	91 2c       	mov	r9, r1
 2c6:	21 2c       	mov	r2, r1
 2c8:	31 2c       	mov	r3, r1
 2ca:	ff e1       	ldi	r31, 0x1F	; 31
 2cc:	f3 15       	cp	r31, r3
 2ce:	d8 f0       	brcs	.+54     	; 0x306 <vfprintf+0x98>
 2d0:	8b 32       	cpi	r24, 0x2B	; 43
 2d2:	79 f0       	breq	.+30     	; 0x2f2 <vfprintf+0x84>
 2d4:	38 f4       	brcc	.+14     	; 0x2e4 <vfprintf+0x76>
 2d6:	80 32       	cpi	r24, 0x20	; 32
 2d8:	79 f0       	breq	.+30     	; 0x2f8 <vfprintf+0x8a>
 2da:	83 32       	cpi	r24, 0x23	; 35
 2dc:	a1 f4       	brne	.+40     	; 0x306 <vfprintf+0x98>
 2de:	23 2d       	mov	r18, r3
 2e0:	20 61       	ori	r18, 0x10	; 16
 2e2:	1d c0       	rjmp	.+58     	; 0x31e <vfprintf+0xb0>
 2e4:	8d 32       	cpi	r24, 0x2D	; 45
 2e6:	61 f0       	breq	.+24     	; 0x300 <vfprintf+0x92>
 2e8:	80 33       	cpi	r24, 0x30	; 48
 2ea:	69 f4       	brne	.+26     	; 0x306 <vfprintf+0x98>
 2ec:	23 2d       	mov	r18, r3
 2ee:	21 60       	ori	r18, 0x01	; 1
 2f0:	16 c0       	rjmp	.+44     	; 0x31e <vfprintf+0xb0>
 2f2:	83 2d       	mov	r24, r3
 2f4:	82 60       	ori	r24, 0x02	; 2
 2f6:	38 2e       	mov	r3, r24
 2f8:	e3 2d       	mov	r30, r3
 2fa:	e4 60       	ori	r30, 0x04	; 4
 2fc:	3e 2e       	mov	r3, r30
 2fe:	2a c0       	rjmp	.+84     	; 0x354 <vfprintf+0xe6>
 300:	f3 2d       	mov	r31, r3
 302:	f8 60       	ori	r31, 0x08	; 8
 304:	1d c0       	rjmp	.+58     	; 0x340 <vfprintf+0xd2>
 306:	37 fc       	sbrc	r3, 7
 308:	2d c0       	rjmp	.+90     	; 0x364 <vfprintf+0xf6>
 30a:	20 ed       	ldi	r18, 0xD0	; 208
 30c:	28 0f       	add	r18, r24
 30e:	2a 30       	cpi	r18, 0x0A	; 10
 310:	40 f0       	brcs	.+16     	; 0x322 <vfprintf+0xb4>
 312:	8e 32       	cpi	r24, 0x2E	; 46
 314:	b9 f4       	brne	.+46     	; 0x344 <vfprintf+0xd6>
 316:	36 fc       	sbrc	r3, 6
 318:	81 c1       	rjmp	.+770    	; 0x61c <__LOCK_REGION_LENGTH__+0x21c>
 31a:	23 2d       	mov	r18, r3
 31c:	20 64       	ori	r18, 0x40	; 64
 31e:	32 2e       	mov	r3, r18
 320:	19 c0       	rjmp	.+50     	; 0x354 <vfprintf+0xe6>
 322:	36 fe       	sbrs	r3, 6
 324:	06 c0       	rjmp	.+12     	; 0x332 <vfprintf+0xc4>
 326:	8a e0       	ldi	r24, 0x0A	; 10
 328:	98 9e       	mul	r9, r24
 32a:	20 0d       	add	r18, r0
 32c:	11 24       	eor	r1, r1
 32e:	92 2e       	mov	r9, r18
 330:	11 c0       	rjmp	.+34     	; 0x354 <vfprintf+0xe6>
 332:	ea e0       	ldi	r30, 0x0A	; 10
 334:	2e 9e       	mul	r2, r30
 336:	20 0d       	add	r18, r0
 338:	11 24       	eor	r1, r1
 33a:	22 2e       	mov	r2, r18
 33c:	f3 2d       	mov	r31, r3
 33e:	f0 62       	ori	r31, 0x20	; 32
 340:	3f 2e       	mov	r3, r31
 342:	08 c0       	rjmp	.+16     	; 0x354 <vfprintf+0xe6>
 344:	8c 36       	cpi	r24, 0x6C	; 108
 346:	21 f4       	brne	.+8      	; 0x350 <vfprintf+0xe2>
 348:	83 2d       	mov	r24, r3
 34a:	80 68       	ori	r24, 0x80	; 128
 34c:	38 2e       	mov	r3, r24
 34e:	02 c0       	rjmp	.+4      	; 0x354 <vfprintf+0xe6>
 350:	88 36       	cpi	r24, 0x68	; 104
 352:	41 f4       	brne	.+16     	; 0x364 <vfprintf+0xf6>
 354:	f7 01       	movw	r30, r14
 356:	93 fd       	sbrc	r25, 3
 358:	85 91       	lpm	r24, Z+
 35a:	93 ff       	sbrs	r25, 3
 35c:	81 91       	ld	r24, Z+
 35e:	7f 01       	movw	r14, r30
 360:	81 11       	cpse	r24, r1
 362:	b3 cf       	rjmp	.-154    	; 0x2ca <vfprintf+0x5c>
 364:	98 2f       	mov	r25, r24
 366:	9f 7d       	andi	r25, 0xDF	; 223
 368:	95 54       	subi	r25, 0x45	; 69
 36a:	93 30       	cpi	r25, 0x03	; 3
 36c:	28 f4       	brcc	.+10     	; 0x378 <vfprintf+0x10a>
 36e:	0c 5f       	subi	r16, 0xFC	; 252
 370:	1f 4f       	sbci	r17, 0xFF	; 255
 372:	9f e3       	ldi	r25, 0x3F	; 63
 374:	99 83       	std	Y+1, r25	; 0x01
 376:	0d c0       	rjmp	.+26     	; 0x392 <vfprintf+0x124>
 378:	83 36       	cpi	r24, 0x63	; 99
 37a:	31 f0       	breq	.+12     	; 0x388 <vfprintf+0x11a>
 37c:	83 37       	cpi	r24, 0x73	; 115
 37e:	71 f0       	breq	.+28     	; 0x39c <vfprintf+0x12e>
 380:	83 35       	cpi	r24, 0x53	; 83
 382:	09 f0       	breq	.+2      	; 0x386 <vfprintf+0x118>
 384:	59 c0       	rjmp	.+178    	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 386:	21 c0       	rjmp	.+66     	; 0x3ca <vfprintf+0x15c>
 388:	f8 01       	movw	r30, r16
 38a:	80 81       	ld	r24, Z
 38c:	89 83       	std	Y+1, r24	; 0x01
 38e:	0e 5f       	subi	r16, 0xFE	; 254
 390:	1f 4f       	sbci	r17, 0xFF	; 255
 392:	88 24       	eor	r8, r8
 394:	83 94       	inc	r8
 396:	91 2c       	mov	r9, r1
 398:	53 01       	movw	r10, r6
 39a:	13 c0       	rjmp	.+38     	; 0x3c2 <vfprintf+0x154>
 39c:	28 01       	movw	r4, r16
 39e:	f2 e0       	ldi	r31, 0x02	; 2
 3a0:	4f 0e       	add	r4, r31
 3a2:	51 1c       	adc	r5, r1
 3a4:	f8 01       	movw	r30, r16
 3a6:	a0 80       	ld	r10, Z
 3a8:	b1 80       	ldd	r11, Z+1	; 0x01
 3aa:	36 fe       	sbrs	r3, 6
 3ac:	03 c0       	rjmp	.+6      	; 0x3b4 <vfprintf+0x146>
 3ae:	69 2d       	mov	r22, r9
 3b0:	70 e0       	ldi	r23, 0x00	; 0
 3b2:	02 c0       	rjmp	.+4      	; 0x3b8 <vfprintf+0x14a>
 3b4:	6f ef       	ldi	r22, 0xFF	; 255
 3b6:	7f ef       	ldi	r23, 0xFF	; 255
 3b8:	c5 01       	movw	r24, r10
 3ba:	0e 94 23 03 	call	0x646	; 0x646 <strnlen>
 3be:	4c 01       	movw	r8, r24
 3c0:	82 01       	movw	r16, r4
 3c2:	f3 2d       	mov	r31, r3
 3c4:	ff 77       	andi	r31, 0x7F	; 127
 3c6:	3f 2e       	mov	r3, r31
 3c8:	16 c0       	rjmp	.+44     	; 0x3f6 <vfprintf+0x188>
 3ca:	28 01       	movw	r4, r16
 3cc:	22 e0       	ldi	r18, 0x02	; 2
 3ce:	42 0e       	add	r4, r18
 3d0:	51 1c       	adc	r5, r1
 3d2:	f8 01       	movw	r30, r16
 3d4:	a0 80       	ld	r10, Z
 3d6:	b1 80       	ldd	r11, Z+1	; 0x01
 3d8:	36 fe       	sbrs	r3, 6
 3da:	03 c0       	rjmp	.+6      	; 0x3e2 <vfprintf+0x174>
 3dc:	69 2d       	mov	r22, r9
 3de:	70 e0       	ldi	r23, 0x00	; 0
 3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <vfprintf+0x178>
 3e2:	6f ef       	ldi	r22, 0xFF	; 255
 3e4:	7f ef       	ldi	r23, 0xFF	; 255
 3e6:	c5 01       	movw	r24, r10
 3e8:	0e 94 18 03 	call	0x630	; 0x630 <strnlen_P>
 3ec:	4c 01       	movw	r8, r24
 3ee:	f3 2d       	mov	r31, r3
 3f0:	f0 68       	ori	r31, 0x80	; 128
 3f2:	3f 2e       	mov	r3, r31
 3f4:	82 01       	movw	r16, r4
 3f6:	33 fc       	sbrc	r3, 3
 3f8:	1b c0       	rjmp	.+54     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 3fa:	82 2d       	mov	r24, r2
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	88 16       	cp	r8, r24
 400:	99 06       	cpc	r9, r25
 402:	b0 f4       	brcc	.+44     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 404:	b6 01       	movw	r22, r12
 406:	80 e2       	ldi	r24, 0x20	; 32
 408:	90 e0       	ldi	r25, 0x00	; 0
 40a:	0e 94 2e 03 	call	0x65c	; 0x65c <fputc>
 40e:	2a 94       	dec	r2
 410:	f4 cf       	rjmp	.-24     	; 0x3fa <vfprintf+0x18c>
 412:	f5 01       	movw	r30, r10
 414:	37 fc       	sbrc	r3, 7
 416:	85 91       	lpm	r24, Z+
 418:	37 fe       	sbrs	r3, 7
 41a:	81 91       	ld	r24, Z+
 41c:	5f 01       	movw	r10, r30
 41e:	b6 01       	movw	r22, r12
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	0e 94 2e 03 	call	0x65c	; 0x65c <fputc>
 426:	21 10       	cpse	r2, r1
 428:	2a 94       	dec	r2
 42a:	21 e0       	ldi	r18, 0x01	; 1
 42c:	82 1a       	sub	r8, r18
 42e:	91 08       	sbc	r9, r1
 430:	81 14       	cp	r8, r1
 432:	91 04       	cpc	r9, r1
 434:	71 f7       	brne	.-36     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 436:	e8 c0       	rjmp	.+464    	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 438:	84 36       	cpi	r24, 0x64	; 100
 43a:	11 f0       	breq	.+4      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 43c:	89 36       	cpi	r24, 0x69	; 105
 43e:	41 f5       	brne	.+80     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 440:	f8 01       	movw	r30, r16
 442:	37 fe       	sbrs	r3, 7
 444:	07 c0       	rjmp	.+14     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 446:	60 81       	ld	r22, Z
 448:	71 81       	ldd	r23, Z+1	; 0x01
 44a:	82 81       	ldd	r24, Z+2	; 0x02
 44c:	93 81       	ldd	r25, Z+3	; 0x03
 44e:	0c 5f       	subi	r16, 0xFC	; 252
 450:	1f 4f       	sbci	r17, 0xFF	; 255
 452:	08 c0       	rjmp	.+16     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 454:	60 81       	ld	r22, Z
 456:	71 81       	ldd	r23, Z+1	; 0x01
 458:	07 2e       	mov	r0, r23
 45a:	00 0c       	add	r0, r0
 45c:	88 0b       	sbc	r24, r24
 45e:	99 0b       	sbc	r25, r25
 460:	0e 5f       	subi	r16, 0xFE	; 254
 462:	1f 4f       	sbci	r17, 0xFF	; 255
 464:	f3 2d       	mov	r31, r3
 466:	ff 76       	andi	r31, 0x6F	; 111
 468:	3f 2e       	mov	r3, r31
 46a:	97 ff       	sbrs	r25, 7
 46c:	09 c0       	rjmp	.+18     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 46e:	90 95       	com	r25
 470:	80 95       	com	r24
 472:	70 95       	com	r23
 474:	61 95       	neg	r22
 476:	7f 4f       	sbci	r23, 0xFF	; 255
 478:	8f 4f       	sbci	r24, 0xFF	; 255
 47a:	9f 4f       	sbci	r25, 0xFF	; 255
 47c:	f0 68       	ori	r31, 0x80	; 128
 47e:	3f 2e       	mov	r3, r31
 480:	2a e0       	ldi	r18, 0x0A	; 10
 482:	30 e0       	ldi	r19, 0x00	; 0
 484:	a3 01       	movw	r20, r6
 486:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <__ultoa_invert>
 48a:	88 2e       	mov	r8, r24
 48c:	86 18       	sub	r8, r6
 48e:	45 c0       	rjmp	.+138    	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 490:	85 37       	cpi	r24, 0x75	; 117
 492:	31 f4       	brne	.+12     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 494:	23 2d       	mov	r18, r3
 496:	2f 7e       	andi	r18, 0xEF	; 239
 498:	b2 2e       	mov	r11, r18
 49a:	2a e0       	ldi	r18, 0x0A	; 10
 49c:	30 e0       	ldi	r19, 0x00	; 0
 49e:	25 c0       	rjmp	.+74     	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 4a0:	93 2d       	mov	r25, r3
 4a2:	99 7f       	andi	r25, 0xF9	; 249
 4a4:	b9 2e       	mov	r11, r25
 4a6:	8f 36       	cpi	r24, 0x6F	; 111
 4a8:	c1 f0       	breq	.+48     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4aa:	18 f4       	brcc	.+6      	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 4ac:	88 35       	cpi	r24, 0x58	; 88
 4ae:	79 f0       	breq	.+30     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4b0:	b5 c0       	rjmp	.+362    	; 0x61c <__LOCK_REGION_LENGTH__+0x21c>
 4b2:	80 37       	cpi	r24, 0x70	; 112
 4b4:	19 f0       	breq	.+6      	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4b6:	88 37       	cpi	r24, 0x78	; 120
 4b8:	21 f0       	breq	.+8      	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4ba:	b0 c0       	rjmp	.+352    	; 0x61c <__LOCK_REGION_LENGTH__+0x21c>
 4bc:	e9 2f       	mov	r30, r25
 4be:	e0 61       	ori	r30, 0x10	; 16
 4c0:	be 2e       	mov	r11, r30
 4c2:	b4 fe       	sbrs	r11, 4
 4c4:	0d c0       	rjmp	.+26     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4c6:	fb 2d       	mov	r31, r11
 4c8:	f4 60       	ori	r31, 0x04	; 4
 4ca:	bf 2e       	mov	r11, r31
 4cc:	09 c0       	rjmp	.+18     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4ce:	34 fe       	sbrs	r3, 4
 4d0:	0a c0       	rjmp	.+20     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4d2:	29 2f       	mov	r18, r25
 4d4:	26 60       	ori	r18, 0x06	; 6
 4d6:	b2 2e       	mov	r11, r18
 4d8:	06 c0       	rjmp	.+12     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4da:	28 e0       	ldi	r18, 0x08	; 8
 4dc:	30 e0       	ldi	r19, 0x00	; 0
 4de:	05 c0       	rjmp	.+10     	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 4e0:	20 e1       	ldi	r18, 0x10	; 16
 4e2:	30 e0       	ldi	r19, 0x00	; 0
 4e4:	02 c0       	rjmp	.+4      	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 4e6:	20 e1       	ldi	r18, 0x10	; 16
 4e8:	32 e0       	ldi	r19, 0x02	; 2
 4ea:	f8 01       	movw	r30, r16
 4ec:	b7 fe       	sbrs	r11, 7
 4ee:	07 c0       	rjmp	.+14     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4f0:	60 81       	ld	r22, Z
 4f2:	71 81       	ldd	r23, Z+1	; 0x01
 4f4:	82 81       	ldd	r24, Z+2	; 0x02
 4f6:	93 81       	ldd	r25, Z+3	; 0x03
 4f8:	0c 5f       	subi	r16, 0xFC	; 252
 4fa:	1f 4f       	sbci	r17, 0xFF	; 255
 4fc:	06 c0       	rjmp	.+12     	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 4fe:	60 81       	ld	r22, Z
 500:	71 81       	ldd	r23, Z+1	; 0x01
 502:	80 e0       	ldi	r24, 0x00	; 0
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	0e 5f       	subi	r16, 0xFE	; 254
 508:	1f 4f       	sbci	r17, 0xFF	; 255
 50a:	a3 01       	movw	r20, r6
 50c:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <__ultoa_invert>
 510:	88 2e       	mov	r8, r24
 512:	86 18       	sub	r8, r6
 514:	fb 2d       	mov	r31, r11
 516:	ff 77       	andi	r31, 0x7F	; 127
 518:	3f 2e       	mov	r3, r31
 51a:	36 fe       	sbrs	r3, 6
 51c:	0d c0       	rjmp	.+26     	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
 51e:	23 2d       	mov	r18, r3
 520:	2e 7f       	andi	r18, 0xFE	; 254
 522:	a2 2e       	mov	r10, r18
 524:	89 14       	cp	r8, r9
 526:	58 f4       	brcc	.+22     	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 528:	34 fe       	sbrs	r3, 4
 52a:	0b c0       	rjmp	.+22     	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 52c:	32 fc       	sbrc	r3, 2
 52e:	09 c0       	rjmp	.+18     	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 530:	83 2d       	mov	r24, r3
 532:	8e 7e       	andi	r24, 0xEE	; 238
 534:	a8 2e       	mov	r10, r24
 536:	05 c0       	rjmp	.+10     	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 538:	b8 2c       	mov	r11, r8
 53a:	a3 2c       	mov	r10, r3
 53c:	03 c0       	rjmp	.+6      	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 53e:	b8 2c       	mov	r11, r8
 540:	01 c0       	rjmp	.+2      	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 542:	b9 2c       	mov	r11, r9
 544:	a4 fe       	sbrs	r10, 4
 546:	0f c0       	rjmp	.+30     	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 548:	fe 01       	movw	r30, r28
 54a:	e8 0d       	add	r30, r8
 54c:	f1 1d       	adc	r31, r1
 54e:	80 81       	ld	r24, Z
 550:	80 33       	cpi	r24, 0x30	; 48
 552:	21 f4       	brne	.+8      	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 554:	9a 2d       	mov	r25, r10
 556:	99 7e       	andi	r25, 0xE9	; 233
 558:	a9 2e       	mov	r10, r25
 55a:	09 c0       	rjmp	.+18     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 55c:	a2 fe       	sbrs	r10, 2
 55e:	06 c0       	rjmp	.+12     	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 560:	b3 94       	inc	r11
 562:	b3 94       	inc	r11
 564:	04 c0       	rjmp	.+8      	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 566:	8a 2d       	mov	r24, r10
 568:	86 78       	andi	r24, 0x86	; 134
 56a:	09 f0       	breq	.+2      	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 56c:	b3 94       	inc	r11
 56e:	a3 fc       	sbrc	r10, 3
 570:	11 c0       	rjmp	.+34     	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 572:	a0 fe       	sbrs	r10, 0
 574:	06 c0       	rjmp	.+12     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 576:	b2 14       	cp	r11, r2
 578:	88 f4       	brcc	.+34     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 57a:	28 0c       	add	r2, r8
 57c:	92 2c       	mov	r9, r2
 57e:	9b 18       	sub	r9, r11
 580:	0e c0       	rjmp	.+28     	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 582:	b2 14       	cp	r11, r2
 584:	60 f4       	brcc	.+24     	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 586:	b6 01       	movw	r22, r12
 588:	80 e2       	ldi	r24, 0x20	; 32
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	0e 94 2e 03 	call	0x65c	; 0x65c <fputc>
 590:	b3 94       	inc	r11
 592:	f7 cf       	rjmp	.-18     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 594:	b2 14       	cp	r11, r2
 596:	18 f4       	brcc	.+6      	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 598:	2b 18       	sub	r2, r11
 59a:	02 c0       	rjmp	.+4      	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
 59c:	98 2c       	mov	r9, r8
 59e:	21 2c       	mov	r2, r1
 5a0:	a4 fe       	sbrs	r10, 4
 5a2:	10 c0       	rjmp	.+32     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 5a4:	b6 01       	movw	r22, r12
 5a6:	80 e3       	ldi	r24, 0x30	; 48
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	0e 94 2e 03 	call	0x65c	; 0x65c <fputc>
 5ae:	a2 fe       	sbrs	r10, 2
 5b0:	17 c0       	rjmp	.+46     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5b2:	a1 fc       	sbrc	r10, 1
 5b4:	03 c0       	rjmp	.+6      	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 5b6:	88 e7       	ldi	r24, 0x78	; 120
 5b8:	90 e0       	ldi	r25, 0x00	; 0
 5ba:	02 c0       	rjmp	.+4      	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 5bc:	88 e5       	ldi	r24, 0x58	; 88
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	b6 01       	movw	r22, r12
 5c2:	0c c0       	rjmp	.+24     	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 5c4:	8a 2d       	mov	r24, r10
 5c6:	86 78       	andi	r24, 0x86	; 134
 5c8:	59 f0       	breq	.+22     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5ca:	a1 fe       	sbrs	r10, 1
 5cc:	02 c0       	rjmp	.+4      	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 5ce:	8b e2       	ldi	r24, 0x2B	; 43
 5d0:	01 c0       	rjmp	.+2      	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
 5d2:	80 e2       	ldi	r24, 0x20	; 32
 5d4:	a7 fc       	sbrc	r10, 7
 5d6:	8d e2       	ldi	r24, 0x2D	; 45
 5d8:	b6 01       	movw	r22, r12
 5da:	90 e0       	ldi	r25, 0x00	; 0
 5dc:	0e 94 2e 03 	call	0x65c	; 0x65c <fputc>
 5e0:	89 14       	cp	r8, r9
 5e2:	38 f4       	brcc	.+14     	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
 5e4:	b6 01       	movw	r22, r12
 5e6:	80 e3       	ldi	r24, 0x30	; 48
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	0e 94 2e 03 	call	0x65c	; 0x65c <fputc>
 5ee:	9a 94       	dec	r9
 5f0:	f7 cf       	rjmp	.-18     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5f2:	8a 94       	dec	r8
 5f4:	f3 01       	movw	r30, r6
 5f6:	e8 0d       	add	r30, r8
 5f8:	f1 1d       	adc	r31, r1
 5fa:	80 81       	ld	r24, Z
 5fc:	b6 01       	movw	r22, r12
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	0e 94 2e 03 	call	0x65c	; 0x65c <fputc>
 604:	81 10       	cpse	r8, r1
 606:	f5 cf       	rjmp	.-22     	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
 608:	22 20       	and	r2, r2
 60a:	09 f4       	brne	.+2      	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 60c:	42 ce       	rjmp	.-892    	; 0x292 <vfprintf+0x24>
 60e:	b6 01       	movw	r22, r12
 610:	80 e2       	ldi	r24, 0x20	; 32
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	0e 94 2e 03 	call	0x65c	; 0x65c <fputc>
 618:	2a 94       	dec	r2
 61a:	f6 cf       	rjmp	.-20     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 61c:	f6 01       	movw	r30, r12
 61e:	86 81       	ldd	r24, Z+6	; 0x06
 620:	97 81       	ldd	r25, Z+7	; 0x07
 622:	02 c0       	rjmp	.+4      	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 624:	8f ef       	ldi	r24, 0xFF	; 255
 626:	9f ef       	ldi	r25, 0xFF	; 255
 628:	2b 96       	adiw	r28, 0x0b	; 11
 62a:	e2 e1       	ldi	r30, 0x12	; 18
 62c:	0c 94 e4 03 	jmp	0x7c8	; 0x7c8 <__epilogue_restores__>

00000630 <strnlen_P>:
 630:	fc 01       	movw	r30, r24
 632:	05 90       	lpm	r0, Z+
 634:	61 50       	subi	r22, 0x01	; 1
 636:	70 40       	sbci	r23, 0x00	; 0
 638:	01 10       	cpse	r0, r1
 63a:	d8 f7       	brcc	.-10     	; 0x632 <strnlen_P+0x2>
 63c:	80 95       	com	r24
 63e:	90 95       	com	r25
 640:	8e 0f       	add	r24, r30
 642:	9f 1f       	adc	r25, r31
 644:	08 95       	ret

00000646 <strnlen>:
 646:	fc 01       	movw	r30, r24
 648:	61 50       	subi	r22, 0x01	; 1
 64a:	70 40       	sbci	r23, 0x00	; 0
 64c:	01 90       	ld	r0, Z+
 64e:	01 10       	cpse	r0, r1
 650:	d8 f7       	brcc	.-10     	; 0x648 <strnlen+0x2>
 652:	80 95       	com	r24
 654:	90 95       	com	r25
 656:	8e 0f       	add	r24, r30
 658:	9f 1f       	adc	r25, r31
 65a:	08 95       	ret

0000065c <fputc>:
 65c:	0f 93       	push	r16
 65e:	1f 93       	push	r17
 660:	cf 93       	push	r28
 662:	df 93       	push	r29
 664:	fb 01       	movw	r30, r22
 666:	23 81       	ldd	r18, Z+3	; 0x03
 668:	21 fd       	sbrc	r18, 1
 66a:	03 c0       	rjmp	.+6      	; 0x672 <fputc+0x16>
 66c:	8f ef       	ldi	r24, 0xFF	; 255
 66e:	9f ef       	ldi	r25, 0xFF	; 255
 670:	2c c0       	rjmp	.+88     	; 0x6ca <fputc+0x6e>
 672:	22 ff       	sbrs	r18, 2
 674:	16 c0       	rjmp	.+44     	; 0x6a2 <fputc+0x46>
 676:	46 81       	ldd	r20, Z+6	; 0x06
 678:	57 81       	ldd	r21, Z+7	; 0x07
 67a:	24 81       	ldd	r18, Z+4	; 0x04
 67c:	35 81       	ldd	r19, Z+5	; 0x05
 67e:	42 17       	cp	r20, r18
 680:	53 07       	cpc	r21, r19
 682:	44 f4       	brge	.+16     	; 0x694 <fputc+0x38>
 684:	a0 81       	ld	r26, Z
 686:	b1 81       	ldd	r27, Z+1	; 0x01
 688:	9d 01       	movw	r18, r26
 68a:	2f 5f       	subi	r18, 0xFF	; 255
 68c:	3f 4f       	sbci	r19, 0xFF	; 255
 68e:	31 83       	std	Z+1, r19	; 0x01
 690:	20 83       	st	Z, r18
 692:	8c 93       	st	X, r24
 694:	26 81       	ldd	r18, Z+6	; 0x06
 696:	37 81       	ldd	r19, Z+7	; 0x07
 698:	2f 5f       	subi	r18, 0xFF	; 255
 69a:	3f 4f       	sbci	r19, 0xFF	; 255
 69c:	37 83       	std	Z+7, r19	; 0x07
 69e:	26 83       	std	Z+6, r18	; 0x06
 6a0:	14 c0       	rjmp	.+40     	; 0x6ca <fputc+0x6e>
 6a2:	8b 01       	movw	r16, r22
 6a4:	ec 01       	movw	r28, r24
 6a6:	fb 01       	movw	r30, r22
 6a8:	00 84       	ldd	r0, Z+8	; 0x08
 6aa:	f1 85       	ldd	r31, Z+9	; 0x09
 6ac:	e0 2d       	mov	r30, r0
 6ae:	09 95       	icall
 6b0:	89 2b       	or	r24, r25
 6b2:	e1 f6       	brne	.-72     	; 0x66c <fputc+0x10>
 6b4:	d8 01       	movw	r26, r16
 6b6:	16 96       	adiw	r26, 0x06	; 6
 6b8:	8d 91       	ld	r24, X+
 6ba:	9c 91       	ld	r25, X
 6bc:	17 97       	sbiw	r26, 0x07	; 7
 6be:	01 96       	adiw	r24, 0x01	; 1
 6c0:	17 96       	adiw	r26, 0x07	; 7
 6c2:	9c 93       	st	X, r25
 6c4:	8e 93       	st	-X, r24
 6c6:	16 97       	sbiw	r26, 0x06	; 6
 6c8:	ce 01       	movw	r24, r28
 6ca:	df 91       	pop	r29
 6cc:	cf 91       	pop	r28
 6ce:	1f 91       	pop	r17
 6d0:	0f 91       	pop	r16
 6d2:	08 95       	ret

000006d4 <__ultoa_invert>:
 6d4:	fa 01       	movw	r30, r20
 6d6:	aa 27       	eor	r26, r26
 6d8:	28 30       	cpi	r18, 0x08	; 8
 6da:	51 f1       	breq	.+84     	; 0x730 <__ultoa_invert+0x5c>
 6dc:	20 31       	cpi	r18, 0x10	; 16
 6de:	81 f1       	breq	.+96     	; 0x740 <__ultoa_invert+0x6c>
 6e0:	e8 94       	clt
 6e2:	6f 93       	push	r22
 6e4:	6e 7f       	andi	r22, 0xFE	; 254
 6e6:	6e 5f       	subi	r22, 0xFE	; 254
 6e8:	7f 4f       	sbci	r23, 0xFF	; 255
 6ea:	8f 4f       	sbci	r24, 0xFF	; 255
 6ec:	9f 4f       	sbci	r25, 0xFF	; 255
 6ee:	af 4f       	sbci	r26, 0xFF	; 255
 6f0:	b1 e0       	ldi	r27, 0x01	; 1
 6f2:	3e d0       	rcall	.+124    	; 0x770 <__ultoa_invert+0x9c>
 6f4:	b4 e0       	ldi	r27, 0x04	; 4
 6f6:	3c d0       	rcall	.+120    	; 0x770 <__ultoa_invert+0x9c>
 6f8:	67 0f       	add	r22, r23
 6fa:	78 1f       	adc	r23, r24
 6fc:	89 1f       	adc	r24, r25
 6fe:	9a 1f       	adc	r25, r26
 700:	a1 1d       	adc	r26, r1
 702:	68 0f       	add	r22, r24
 704:	79 1f       	adc	r23, r25
 706:	8a 1f       	adc	r24, r26
 708:	91 1d       	adc	r25, r1
 70a:	a1 1d       	adc	r26, r1
 70c:	6a 0f       	add	r22, r26
 70e:	71 1d       	adc	r23, r1
 710:	81 1d       	adc	r24, r1
 712:	91 1d       	adc	r25, r1
 714:	a1 1d       	adc	r26, r1
 716:	20 d0       	rcall	.+64     	; 0x758 <__ultoa_invert+0x84>
 718:	09 f4       	brne	.+2      	; 0x71c <__ultoa_invert+0x48>
 71a:	68 94       	set
 71c:	3f 91       	pop	r19
 71e:	2a e0       	ldi	r18, 0x0A	; 10
 720:	26 9f       	mul	r18, r22
 722:	11 24       	eor	r1, r1
 724:	30 19       	sub	r19, r0
 726:	30 5d       	subi	r19, 0xD0	; 208
 728:	31 93       	st	Z+, r19
 72a:	de f6       	brtc	.-74     	; 0x6e2 <__ultoa_invert+0xe>
 72c:	cf 01       	movw	r24, r30
 72e:	08 95       	ret
 730:	46 2f       	mov	r20, r22
 732:	47 70       	andi	r20, 0x07	; 7
 734:	40 5d       	subi	r20, 0xD0	; 208
 736:	41 93       	st	Z+, r20
 738:	b3 e0       	ldi	r27, 0x03	; 3
 73a:	0f d0       	rcall	.+30     	; 0x75a <__ultoa_invert+0x86>
 73c:	c9 f7       	brne	.-14     	; 0x730 <__ultoa_invert+0x5c>
 73e:	f6 cf       	rjmp	.-20     	; 0x72c <__ultoa_invert+0x58>
 740:	46 2f       	mov	r20, r22
 742:	4f 70       	andi	r20, 0x0F	; 15
 744:	40 5d       	subi	r20, 0xD0	; 208
 746:	4a 33       	cpi	r20, 0x3A	; 58
 748:	18 f0       	brcs	.+6      	; 0x750 <__ultoa_invert+0x7c>
 74a:	49 5d       	subi	r20, 0xD9	; 217
 74c:	31 fd       	sbrc	r19, 1
 74e:	40 52       	subi	r20, 0x20	; 32
 750:	41 93       	st	Z+, r20
 752:	02 d0       	rcall	.+4      	; 0x758 <__ultoa_invert+0x84>
 754:	a9 f7       	brne	.-22     	; 0x740 <__ultoa_invert+0x6c>
 756:	ea cf       	rjmp	.-44     	; 0x72c <__ultoa_invert+0x58>
 758:	b4 e0       	ldi	r27, 0x04	; 4
 75a:	a6 95       	lsr	r26
 75c:	97 95       	ror	r25
 75e:	87 95       	ror	r24
 760:	77 95       	ror	r23
 762:	67 95       	ror	r22
 764:	ba 95       	dec	r27
 766:	c9 f7       	brne	.-14     	; 0x75a <__ultoa_invert+0x86>
 768:	00 97       	sbiw	r24, 0x00	; 0
 76a:	61 05       	cpc	r22, r1
 76c:	71 05       	cpc	r23, r1
 76e:	08 95       	ret
 770:	9b 01       	movw	r18, r22
 772:	ac 01       	movw	r20, r24
 774:	0a 2e       	mov	r0, r26
 776:	06 94       	lsr	r0
 778:	57 95       	ror	r21
 77a:	47 95       	ror	r20
 77c:	37 95       	ror	r19
 77e:	27 95       	ror	r18
 780:	ba 95       	dec	r27
 782:	c9 f7       	brne	.-14     	; 0x776 <__ultoa_invert+0xa2>
 784:	62 0f       	add	r22, r18
 786:	73 1f       	adc	r23, r19
 788:	84 1f       	adc	r24, r20
 78a:	95 1f       	adc	r25, r21
 78c:	a0 1d       	adc	r26, r0
 78e:	08 95       	ret

00000790 <__prologue_saves__>:
 790:	2f 92       	push	r2
 792:	3f 92       	push	r3
 794:	4f 92       	push	r4
 796:	5f 92       	push	r5
 798:	6f 92       	push	r6
 79a:	7f 92       	push	r7
 79c:	8f 92       	push	r8
 79e:	9f 92       	push	r9
 7a0:	af 92       	push	r10
 7a2:	bf 92       	push	r11
 7a4:	cf 92       	push	r12
 7a6:	df 92       	push	r13
 7a8:	ef 92       	push	r14
 7aa:	ff 92       	push	r15
 7ac:	0f 93       	push	r16
 7ae:	1f 93       	push	r17
 7b0:	cf 93       	push	r28
 7b2:	df 93       	push	r29
 7b4:	cd b7       	in	r28, 0x3d	; 61
 7b6:	de b7       	in	r29, 0x3e	; 62
 7b8:	ca 1b       	sub	r28, r26
 7ba:	db 0b       	sbc	r29, r27
 7bc:	0f b6       	in	r0, 0x3f	; 63
 7be:	f8 94       	cli
 7c0:	de bf       	out	0x3e, r29	; 62
 7c2:	0f be       	out	0x3f, r0	; 63
 7c4:	cd bf       	out	0x3d, r28	; 61
 7c6:	09 94       	ijmp

000007c8 <__epilogue_restores__>:
 7c8:	2a 88       	ldd	r2, Y+18	; 0x12
 7ca:	39 88       	ldd	r3, Y+17	; 0x11
 7cc:	48 88       	ldd	r4, Y+16	; 0x10
 7ce:	5f 84       	ldd	r5, Y+15	; 0x0f
 7d0:	6e 84       	ldd	r6, Y+14	; 0x0e
 7d2:	7d 84       	ldd	r7, Y+13	; 0x0d
 7d4:	8c 84       	ldd	r8, Y+12	; 0x0c
 7d6:	9b 84       	ldd	r9, Y+11	; 0x0b
 7d8:	aa 84       	ldd	r10, Y+10	; 0x0a
 7da:	b9 84       	ldd	r11, Y+9	; 0x09
 7dc:	c8 84       	ldd	r12, Y+8	; 0x08
 7de:	df 80       	ldd	r13, Y+7	; 0x07
 7e0:	ee 80       	ldd	r14, Y+6	; 0x06
 7e2:	fd 80       	ldd	r15, Y+5	; 0x05
 7e4:	0c 81       	ldd	r16, Y+4	; 0x04
 7e6:	1b 81       	ldd	r17, Y+3	; 0x03
 7e8:	aa 81       	ldd	r26, Y+2	; 0x02
 7ea:	b9 81       	ldd	r27, Y+1	; 0x01
 7ec:	ce 0f       	add	r28, r30
 7ee:	d1 1d       	adc	r29, r1
 7f0:	0f b6       	in	r0, 0x3f	; 63
 7f2:	f8 94       	cli
 7f4:	de bf       	out	0x3e, r29	; 62
 7f6:	0f be       	out	0x3f, r0	; 63
 7f8:	cd bf       	out	0x3d, r28	; 61
 7fa:	ed 01       	movw	r28, r26
 7fc:	08 95       	ret

000007fe <_exit>:
 7fe:	f8 94       	cli

00000800 <__stop_program>:
 800:	ff cf       	rjmp	.-2      	; 0x800 <__stop_program>
