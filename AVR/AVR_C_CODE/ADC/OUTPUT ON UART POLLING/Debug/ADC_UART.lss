
ADC_UART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000766  000007da  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000766  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  000007e0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000083c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  00000878  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a0d  00000000  00000000  000008c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008f0  00000000  00000000  000012cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000395  00000000  00000000  00001bbd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000090  00000000  00000000  00001f54  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000461  00000000  00000000  00001fe4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001ae  00000000  00000000  00002445  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  000025f3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	56 c0       	rjmp	.+172    	; 0xb2 <__bad_interrupt>
   6:	00 00       	nop
   8:	54 c0       	rjmp	.+168    	; 0xb2 <__bad_interrupt>
   a:	00 00       	nop
   c:	52 c0       	rjmp	.+164    	; 0xb2 <__bad_interrupt>
   e:	00 00       	nop
  10:	50 c0       	rjmp	.+160    	; 0xb2 <__bad_interrupt>
  12:	00 00       	nop
  14:	4e c0       	rjmp	.+156    	; 0xb2 <__bad_interrupt>
  16:	00 00       	nop
  18:	4c c0       	rjmp	.+152    	; 0xb2 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4a c0       	rjmp	.+148    	; 0xb2 <__bad_interrupt>
  1e:	00 00       	nop
  20:	48 c0       	rjmp	.+144    	; 0xb2 <__bad_interrupt>
  22:	00 00       	nop
  24:	46 c0       	rjmp	.+140    	; 0xb2 <__bad_interrupt>
  26:	00 00       	nop
  28:	44 c0       	rjmp	.+136    	; 0xb2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	42 c0       	rjmp	.+132    	; 0xb2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	40 c0       	rjmp	.+128    	; 0xb2 <__bad_interrupt>
  32:	00 00       	nop
  34:	3e c0       	rjmp	.+124    	; 0xb2 <__bad_interrupt>
  36:	00 00       	nop
  38:	3c c0       	rjmp	.+120    	; 0xb2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3a c0       	rjmp	.+116    	; 0xb2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	38 c0       	rjmp	.+112    	; 0xb2 <__bad_interrupt>
  42:	00 00       	nop
  44:	36 c0       	rjmp	.+108    	; 0xb2 <__bad_interrupt>
  46:	00 00       	nop
  48:	34 c0       	rjmp	.+104    	; 0xb2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	32 c0       	rjmp	.+100    	; 0xb2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	30 c0       	rjmp	.+96     	; 0xb2 <__bad_interrupt>
  52:	00 00       	nop
  54:	2e c0       	rjmp	.+92     	; 0xb2 <__bad_interrupt>
  56:	00 00       	nop
  58:	2c c0       	rjmp	.+88     	; 0xb2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2a c0       	rjmp	.+84     	; 0xb2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	28 c0       	rjmp	.+80     	; 0xb2 <__bad_interrupt>
  62:	00 00       	nop
  64:	26 c0       	rjmp	.+76     	; 0xb2 <__bad_interrupt>
  66:	00 00       	nop
  68:	24 c0       	rjmp	.+72     	; 0xb2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	22 c0       	rjmp	.+68     	; 0xb2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	20 c0       	rjmp	.+64     	; 0xb2 <__bad_interrupt>
  72:	00 00       	nop
  74:	1e c0       	rjmp	.+60     	; 0xb2 <__bad_interrupt>
  76:	00 00       	nop
  78:	1c c0       	rjmp	.+56     	; 0xb2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1a c0       	rjmp	.+52     	; 0xb2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	18 c0       	rjmp	.+48     	; 0xb2 <__bad_interrupt>
  82:	00 00       	nop
  84:	16 c0       	rjmp	.+44     	; 0xb2 <__bad_interrupt>
  86:	00 00       	nop
  88:	14 c0       	rjmp	.+40     	; 0xb2 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e6 e6       	ldi	r30, 0x66	; 102
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <__do_copy_data+0x10>
  a4:	05 90       	lpm	r0, Z+
  a6:	0d 92       	st	X+, r0
  a8:	a6 30       	cpi	r26, 0x06	; 6
  aa:	b1 07       	cpc	r27, r17
  ac:	d9 f7       	brne	.-10     	; 0xa4 <__do_copy_data+0xc>
  ae:	32 d0       	rcall	.+100    	; 0x114 <main>
  b0:	58 c3       	rjmp	.+1712   	; 0x762 <_exit>

000000b2 <__bad_interrupt>:
  b2:	a6 cf       	rjmp	.-180    	; 0x0 <__vectors>

000000b4 <adc_init>:
}
void adc_init()

{   //ADC0 IS SELECTED BY SETTING MUX5:0 TO ZERO.
	// Vref set to 5 volt and 8 bits in higher ADCH and 2 bits in lower ADCL
	ADMUX |= (1<<REFS0);
  b4:	3e 9a       	sbi	0x07, 6	; 7
	//prescaler set to 128 that is 125 KHz adc clk freq
	ADCSRA |=(1<<ADEN)|(1<<ADPS0)|(1<<ADPS1)|(1<<ADPS2);
  b6:	86 b1       	in	r24, 0x06	; 6
  b8:	87 68       	ori	r24, 0x87	; 135
  ba:	86 b9       	out	0x06, r24	; 6
  bc:	08 95       	ret

000000be <adc_start>:
	//ADCSRB -> ADTS2:0  free running mode -- set to zero
}
unsigned int adc_start()
{
	//to set start conversion bit of reg ADCSRA
	ADCSRA |=(1<<ADSC); 
  be:	36 9a       	sbi	0x06, 6	; 6
	//To check if conversion is completed or not   
	while(!(ADCSRA &(1<<ADIF)));
  c0:	34 9b       	sbis	0x06, 4	; 6
  c2:	fe cf       	rjmp	.-4      	; 0xc0 <adc_start+0x2>
	//PORTC = ADC;
	return ADC;
  c4:	84 b1       	in	r24, 0x04	; 4
  c6:	95 b1       	in	r25, 0x05	; 5
}
  c8:	08 95       	ret

000000ca <uart_init>:

void uart_init(unsigned int ubrr){
	//HIGHER BIT 00
	UBRR1H=0;  
  ca:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
	//to set baud rate                        
	UBRR1L=ubrr;  
  ce:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
	// Enabling tx and rx pin                     
	UCSR1B|=(1<<TXEN1)|(1<<RXEN1);  
  d2:	ea e9       	ldi	r30, 0x9A	; 154
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	80 81       	ld	r24, Z
  d8:	88 61       	ori	r24, 0x18	; 24
  da:	80 83       	st	Z, r24
	// for transmitting 8 bit data
	UCSR1C|=(1<<UCSZ11)|(1<<UCSZ10); 
  dc:	ed e9       	ldi	r30, 0x9D	; 157
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	80 81       	ld	r24, Z
  e2:	86 60       	ori	r24, 0x06	; 6
  e4:	80 83       	st	Z, r24
  e6:	08 95       	ret

000000e8 <uart_tx>:
	
}

void uart_tx(unsigned char data){
	 //to check if UDR is empty or not if empty then load data to UDR
	while(!((UCSR1A)&(1<<UDRE1)));    
  e8:	eb e9       	ldi	r30, 0x9B	; 155
  ea:	f0 e0       	ldi	r31, 0x00	; 0
  ec:	90 81       	ld	r25, Z
  ee:	95 ff       	sbrs	r25, 5
  f0:	fd cf       	rjmp	.-6      	; 0xec <uart_tx+0x4>
	UDR1=data;
  f2:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
  f6:	08 95       	ret

000000f8 <uart_string>:
	
}
// To send string to uart character by character
void uart_string(char * str){
  f8:	cf 93       	push	r28
  fa:	df 93       	push	r29
  fc:	ec 01       	movw	r28, r24
	for(unsigned int i=0;str[i]!='\0';i++){
  fe:	88 81       	ld	r24, Y
 100:	88 23       	and	r24, r24
 102:	29 f0       	breq	.+10     	; 0x10e <uart_string+0x16>
 104:	21 96       	adiw	r28, 0x01	; 1
		uart_tx(str[i]);
 106:	f0 df       	rcall	.-32     	; 0xe8 <uart_tx>
	UDR1=data;
	
}
// To send string to uart character by character
void uart_string(char * str){
	for(unsigned int i=0;str[i]!='\0';i++){
 108:	89 91       	ld	r24, Y+
 10a:	81 11       	cpse	r24, r1
 10c:	fc cf       	rjmp	.-8      	; 0x106 <uart_string+0xe>
		uart_tx(str[i]);
	}
}
 10e:	df 91       	pop	r29
 110:	cf 91       	pop	r28
 112:	08 95       	ret

00000114 <main>:
void uart_tx(unsigned char);          // declaration of uart transmission function
void uart_string(char *);             //declaration of fuction which converts int data into string
void adc_init();                      //declaration of adc initialization function                   
unsigned int adc_start();             //declaration of adc start function
int main(void)                         
{
 114:	cf 93       	push	r28
 116:	df 93       	push	r29
 118:	cd b7       	in	r28, 0x3d	; 61
 11a:	de b7       	in	r29, 0x3e	; 62
 11c:	2a 97       	sbiw	r28, 0x0a	; 10
 11e:	0f b6       	in	r0, 0x3f	; 63
 120:	f8 94       	cli
 122:	de bf       	out	0x3e, r29	; 62
 124:	0f be       	out	0x3f, r0	; 63
 126:	cd bf       	out	0x3d, r28	; 61
	
	char buf1[10];                   
	unsigned int DOUT=0;
	DDRC=0xff;
 128:	8f ef       	ldi	r24, 0xFF	; 255
 12a:	84 bb       	out	0x14, r24	; 20
	unsigned int data;
	adc_init();
 12c:	c3 df       	rcall	.-122    	; 0xb4 <adc_init>
	//calculated value of ubrr is 103(ubrr=fosc/16/baud_rate-1)
	uart_init(103);
 12e:	87 e6       	ldi	r24, 0x67	; 103
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	cb df       	rcall	.-106    	; 0xca <uart_init>
		data=adc_start();
		//calculation of digital output
		DOUT=(data*(5000/1024));
		
//snprintf() function formats and stores a series of characters and values in the array buffer.
		snprintf(buf1, 10, "%dmv",DOUT);
 134:	0f 2e       	mov	r0, r31
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	ef 2e       	mov	r14, r31
 13a:	f1 e0       	ldi	r31, 0x01	; 1
 13c:	ff 2e       	mov	r15, r31
 13e:	f0 2d       	mov	r31, r0
 140:	0f 2e       	mov	r0, r31
 142:	fa e0       	ldi	r31, 0x0A	; 10
 144:	cf 2e       	mov	r12, r31
 146:	f0 2d       	mov	r31, r0
 148:	8e 01       	movw	r16, r28
 14a:	0f 5f       	subi	r16, 0xFF	; 255
 14c:	1f 4f       	sbci	r17, 0xFF	; 255
		_delay_ms(1000);
		PORTC=0xf0;
 14e:	0f 2e       	mov	r0, r31
 150:	f0 ef       	ldi	r31, 0xF0	; 240
 152:	df 2e       	mov	r13, r31
	//calculated value of ubrr is 103(ubrr=fosc/16/baud_rate-1)
	uart_init(103);
	while (1)
	{
		// ADC conversion result is catching into data variable
		data=adc_start();
 154:	f0 2d       	mov	r31, r0
 156:	b3 df       	rcall	.-154    	; 0xbe <adc_start>
		//calculation of digital output
		DOUT=(data*(5000/1024));
		
//snprintf() function formats and stores a series of characters and values in the array buffer.
		snprintf(buf1, 10, "%dmv",DOUT);
 158:	88 0f       	add	r24, r24
 15a:	99 1f       	adc	r25, r25
 15c:	88 0f       	add	r24, r24
 15e:	99 1f       	adc	r25, r25
 160:	9f 93       	push	r25
 162:	8f 93       	push	r24
 164:	ff 92       	push	r15
 166:	ef 92       	push	r14
 168:	1f 92       	push	r1
 16a:	cf 92       	push	r12
 16c:	1f 93       	push	r17
 16e:	0f 93       	push	r16
 170:	12 d0       	rcall	.+36     	; 0x196 <snprintf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 172:	2f ef       	ldi	r18, 0xFF	; 255
 174:	83 ed       	ldi	r24, 0xD3	; 211
 176:	90 e3       	ldi	r25, 0x30	; 48
 178:	21 50       	subi	r18, 0x01	; 1
 17a:	80 40       	sbci	r24, 0x00	; 0
 17c:	90 40       	sbci	r25, 0x00	; 0
 17e:	e1 f7       	brne	.-8      	; 0x178 <main+0x64>
 180:	00 c0       	rjmp	.+0      	; 0x182 <main+0x6e>
		_delay_ms(1000);
		PORTC=0xf0;
 182:	00 00       	nop
		uart_string(buf1);
 184:	d5 ba       	out	0x15, r13	; 21
 186:	c8 01       	movw	r24, r16
 188:	b7 df       	rcall	.-146    	; 0xf8 <uart_string>
 18a:	0f b6       	in	r0, 0x3f	; 63
 18c:	f8 94       	cli
 18e:	de bf       	out	0x3e, r29	; 62
 190:	0f be       	out	0x3f, r0	; 63
 192:	cd bf       	out	0x3d, r28	; 61
 194:	e0 cf       	rjmp	.-64     	; 0x156 <main+0x42>

00000196 <snprintf>:
 196:	ae e0       	ldi	r26, 0x0E	; 14
 198:	b0 e0       	ldi	r27, 0x00	; 0
 19a:	e0 ed       	ldi	r30, 0xD0	; 208
 19c:	f0 e0       	ldi	r31, 0x00	; 0
 19e:	b8 c2       	rjmp	.+1392   	; 0x710 <__prologue_saves__+0x1c>
 1a0:	0d 89       	ldd	r16, Y+21	; 0x15
 1a2:	1e 89       	ldd	r17, Y+22	; 0x16
 1a4:	8f 89       	ldd	r24, Y+23	; 0x17
 1a6:	98 8d       	ldd	r25, Y+24	; 0x18
 1a8:	26 e0       	ldi	r18, 0x06	; 6
 1aa:	2c 83       	std	Y+4, r18	; 0x04
 1ac:	1a 83       	std	Y+2, r17	; 0x02
 1ae:	09 83       	std	Y+1, r16	; 0x01
 1b0:	97 ff       	sbrs	r25, 7
 1b2:	02 c0       	rjmp	.+4      	; 0x1b8 <snprintf+0x22>
 1b4:	80 e0       	ldi	r24, 0x00	; 0
 1b6:	90 e8       	ldi	r25, 0x80	; 128
 1b8:	01 97       	sbiw	r24, 0x01	; 1
 1ba:	9e 83       	std	Y+6, r25	; 0x06
 1bc:	8d 83       	std	Y+5, r24	; 0x05
 1be:	ae 01       	movw	r20, r28
 1c0:	45 5e       	subi	r20, 0xE5	; 229
 1c2:	5f 4f       	sbci	r21, 0xFF	; 255
 1c4:	69 8d       	ldd	r22, Y+25	; 0x19
 1c6:	7a 8d       	ldd	r23, Y+26	; 0x1a
 1c8:	ce 01       	movw	r24, r28
 1ca:	01 96       	adiw	r24, 0x01	; 1
 1cc:	11 d0       	rcall	.+34     	; 0x1f0 <vfprintf>
 1ce:	4d 81       	ldd	r20, Y+5	; 0x05
 1d0:	5e 81       	ldd	r21, Y+6	; 0x06
 1d2:	57 fd       	sbrc	r21, 7
 1d4:	0a c0       	rjmp	.+20     	; 0x1ea <snprintf+0x54>
 1d6:	2f 81       	ldd	r18, Y+7	; 0x07
 1d8:	38 85       	ldd	r19, Y+8	; 0x08
 1da:	42 17       	cp	r20, r18
 1dc:	53 07       	cpc	r21, r19
 1de:	0c f4       	brge	.+2      	; 0x1e2 <snprintf+0x4c>
 1e0:	9a 01       	movw	r18, r20
 1e2:	f8 01       	movw	r30, r16
 1e4:	e2 0f       	add	r30, r18
 1e6:	f3 1f       	adc	r31, r19
 1e8:	10 82       	st	Z, r1
 1ea:	2e 96       	adiw	r28, 0x0e	; 14
 1ec:	e4 e0       	ldi	r30, 0x04	; 4
 1ee:	ac c2       	rjmp	.+1368   	; 0x748 <__epilogue_restores__+0x1c>

000001f0 <vfprintf>:
 1f0:	ab e0       	ldi	r26, 0x0B	; 11
 1f2:	b0 e0       	ldi	r27, 0x00	; 0
 1f4:	ed ef       	ldi	r30, 0xFD	; 253
 1f6:	f0 e0       	ldi	r31, 0x00	; 0
 1f8:	7d c2       	rjmp	.+1274   	; 0x6f4 <__prologue_saves__>
 1fa:	6c 01       	movw	r12, r24
 1fc:	7b 01       	movw	r14, r22
 1fe:	8a 01       	movw	r16, r20
 200:	fc 01       	movw	r30, r24
 202:	17 82       	std	Z+7, r1	; 0x07
 204:	16 82       	std	Z+6, r1	; 0x06
 206:	83 81       	ldd	r24, Z+3	; 0x03
 208:	81 ff       	sbrs	r24, 1
 20a:	bf c1       	rjmp	.+894    	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 20c:	ce 01       	movw	r24, r28
 20e:	01 96       	adiw	r24, 0x01	; 1
 210:	3c 01       	movw	r6, r24
 212:	f6 01       	movw	r30, r12
 214:	93 81       	ldd	r25, Z+3	; 0x03
 216:	f7 01       	movw	r30, r14
 218:	93 fd       	sbrc	r25, 3
 21a:	85 91       	lpm	r24, Z+
 21c:	93 ff       	sbrs	r25, 3
 21e:	81 91       	ld	r24, Z+
 220:	7f 01       	movw	r14, r30
 222:	88 23       	and	r24, r24
 224:	09 f4       	brne	.+2      	; 0x228 <vfprintf+0x38>
 226:	ad c1       	rjmp	.+858    	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 228:	85 32       	cpi	r24, 0x25	; 37
 22a:	39 f4       	brne	.+14     	; 0x23a <vfprintf+0x4a>
 22c:	93 fd       	sbrc	r25, 3
 22e:	85 91       	lpm	r24, Z+
 230:	93 ff       	sbrs	r25, 3
 232:	81 91       	ld	r24, Z+
 234:	7f 01       	movw	r14, r30
 236:	85 32       	cpi	r24, 0x25	; 37
 238:	21 f4       	brne	.+8      	; 0x242 <vfprintf+0x52>
 23a:	b6 01       	movw	r22, r12
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	c0 d1       	rcall	.+896    	; 0x5c0 <fputc>
 240:	e8 cf       	rjmp	.-48     	; 0x212 <vfprintf+0x22>
 242:	91 2c       	mov	r9, r1
 244:	21 2c       	mov	r2, r1
 246:	31 2c       	mov	r3, r1
 248:	ff e1       	ldi	r31, 0x1F	; 31
 24a:	f3 15       	cp	r31, r3
 24c:	d8 f0       	brcs	.+54     	; 0x284 <vfprintf+0x94>
 24e:	8b 32       	cpi	r24, 0x2B	; 43
 250:	79 f0       	breq	.+30     	; 0x270 <vfprintf+0x80>
 252:	38 f4       	brcc	.+14     	; 0x262 <vfprintf+0x72>
 254:	80 32       	cpi	r24, 0x20	; 32
 256:	79 f0       	breq	.+30     	; 0x276 <vfprintf+0x86>
 258:	83 32       	cpi	r24, 0x23	; 35
 25a:	a1 f4       	brne	.+40     	; 0x284 <vfprintf+0x94>
 25c:	23 2d       	mov	r18, r3
 25e:	20 61       	ori	r18, 0x10	; 16
 260:	1d c0       	rjmp	.+58     	; 0x29c <vfprintf+0xac>
 262:	8d 32       	cpi	r24, 0x2D	; 45
 264:	61 f0       	breq	.+24     	; 0x27e <vfprintf+0x8e>
 266:	80 33       	cpi	r24, 0x30	; 48
 268:	69 f4       	brne	.+26     	; 0x284 <vfprintf+0x94>
 26a:	23 2d       	mov	r18, r3
 26c:	21 60       	ori	r18, 0x01	; 1
 26e:	16 c0       	rjmp	.+44     	; 0x29c <vfprintf+0xac>
 270:	83 2d       	mov	r24, r3
 272:	82 60       	ori	r24, 0x02	; 2
 274:	38 2e       	mov	r3, r24
 276:	e3 2d       	mov	r30, r3
 278:	e4 60       	ori	r30, 0x04	; 4
 27a:	3e 2e       	mov	r3, r30
 27c:	2a c0       	rjmp	.+84     	; 0x2d2 <vfprintf+0xe2>
 27e:	f3 2d       	mov	r31, r3
 280:	f8 60       	ori	r31, 0x08	; 8
 282:	1d c0       	rjmp	.+58     	; 0x2be <vfprintf+0xce>
 284:	37 fc       	sbrc	r3, 7
 286:	2d c0       	rjmp	.+90     	; 0x2e2 <vfprintf+0xf2>
 288:	20 ed       	ldi	r18, 0xD0	; 208
 28a:	28 0f       	add	r18, r24
 28c:	2a 30       	cpi	r18, 0x0A	; 10
 28e:	40 f0       	brcs	.+16     	; 0x2a0 <vfprintf+0xb0>
 290:	8e 32       	cpi	r24, 0x2E	; 46
 292:	b9 f4       	brne	.+46     	; 0x2c2 <vfprintf+0xd2>
 294:	36 fc       	sbrc	r3, 6
 296:	75 c1       	rjmp	.+746    	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 298:	23 2d       	mov	r18, r3
 29a:	20 64       	ori	r18, 0x40	; 64
 29c:	32 2e       	mov	r3, r18
 29e:	19 c0       	rjmp	.+50     	; 0x2d2 <vfprintf+0xe2>
 2a0:	36 fe       	sbrs	r3, 6
 2a2:	06 c0       	rjmp	.+12     	; 0x2b0 <vfprintf+0xc0>
 2a4:	8a e0       	ldi	r24, 0x0A	; 10
 2a6:	98 9e       	mul	r9, r24
 2a8:	20 0d       	add	r18, r0
 2aa:	11 24       	eor	r1, r1
 2ac:	92 2e       	mov	r9, r18
 2ae:	11 c0       	rjmp	.+34     	; 0x2d2 <vfprintf+0xe2>
 2b0:	ea e0       	ldi	r30, 0x0A	; 10
 2b2:	2e 9e       	mul	r2, r30
 2b4:	20 0d       	add	r18, r0
 2b6:	11 24       	eor	r1, r1
 2b8:	22 2e       	mov	r2, r18
 2ba:	f3 2d       	mov	r31, r3
 2bc:	f0 62       	ori	r31, 0x20	; 32
 2be:	3f 2e       	mov	r3, r31
 2c0:	08 c0       	rjmp	.+16     	; 0x2d2 <vfprintf+0xe2>
 2c2:	8c 36       	cpi	r24, 0x6C	; 108
 2c4:	21 f4       	brne	.+8      	; 0x2ce <vfprintf+0xde>
 2c6:	83 2d       	mov	r24, r3
 2c8:	80 68       	ori	r24, 0x80	; 128
 2ca:	38 2e       	mov	r3, r24
 2cc:	02 c0       	rjmp	.+4      	; 0x2d2 <vfprintf+0xe2>
 2ce:	88 36       	cpi	r24, 0x68	; 104
 2d0:	41 f4       	brne	.+16     	; 0x2e2 <vfprintf+0xf2>
 2d2:	f7 01       	movw	r30, r14
 2d4:	93 fd       	sbrc	r25, 3
 2d6:	85 91       	lpm	r24, Z+
 2d8:	93 ff       	sbrs	r25, 3
 2da:	81 91       	ld	r24, Z+
 2dc:	7f 01       	movw	r14, r30
 2de:	81 11       	cpse	r24, r1
 2e0:	b3 cf       	rjmp	.-154    	; 0x248 <vfprintf+0x58>
 2e2:	98 2f       	mov	r25, r24
 2e4:	9f 7d       	andi	r25, 0xDF	; 223
 2e6:	95 54       	subi	r25, 0x45	; 69
 2e8:	93 30       	cpi	r25, 0x03	; 3
 2ea:	28 f4       	brcc	.+10     	; 0x2f6 <vfprintf+0x106>
 2ec:	0c 5f       	subi	r16, 0xFC	; 252
 2ee:	1f 4f       	sbci	r17, 0xFF	; 255
 2f0:	9f e3       	ldi	r25, 0x3F	; 63
 2f2:	99 83       	std	Y+1, r25	; 0x01
 2f4:	0d c0       	rjmp	.+26     	; 0x310 <vfprintf+0x120>
 2f6:	83 36       	cpi	r24, 0x63	; 99
 2f8:	31 f0       	breq	.+12     	; 0x306 <vfprintf+0x116>
 2fa:	83 37       	cpi	r24, 0x73	; 115
 2fc:	71 f0       	breq	.+28     	; 0x31a <vfprintf+0x12a>
 2fe:	83 35       	cpi	r24, 0x53	; 83
 300:	09 f0       	breq	.+2      	; 0x304 <vfprintf+0x114>
 302:	55 c0       	rjmp	.+170    	; 0x3ae <vfprintf+0x1be>
 304:	20 c0       	rjmp	.+64     	; 0x346 <vfprintf+0x156>
 306:	f8 01       	movw	r30, r16
 308:	80 81       	ld	r24, Z
 30a:	89 83       	std	Y+1, r24	; 0x01
 30c:	0e 5f       	subi	r16, 0xFE	; 254
 30e:	1f 4f       	sbci	r17, 0xFF	; 255
 310:	88 24       	eor	r8, r8
 312:	83 94       	inc	r8
 314:	91 2c       	mov	r9, r1
 316:	53 01       	movw	r10, r6
 318:	12 c0       	rjmp	.+36     	; 0x33e <vfprintf+0x14e>
 31a:	28 01       	movw	r4, r16
 31c:	f2 e0       	ldi	r31, 0x02	; 2
 31e:	4f 0e       	add	r4, r31
 320:	51 1c       	adc	r5, r1
 322:	f8 01       	movw	r30, r16
 324:	a0 80       	ld	r10, Z
 326:	b1 80       	ldd	r11, Z+1	; 0x01
 328:	36 fe       	sbrs	r3, 6
 32a:	03 c0       	rjmp	.+6      	; 0x332 <vfprintf+0x142>
 32c:	69 2d       	mov	r22, r9
 32e:	70 e0       	ldi	r23, 0x00	; 0
 330:	02 c0       	rjmp	.+4      	; 0x336 <vfprintf+0x146>
 332:	6f ef       	ldi	r22, 0xFF	; 255
 334:	7f ef       	ldi	r23, 0xFF	; 255
 336:	c5 01       	movw	r24, r10
 338:	38 d1       	rcall	.+624    	; 0x5aa <strnlen>
 33a:	4c 01       	movw	r8, r24
 33c:	82 01       	movw	r16, r4
 33e:	f3 2d       	mov	r31, r3
 340:	ff 77       	andi	r31, 0x7F	; 127
 342:	3f 2e       	mov	r3, r31
 344:	15 c0       	rjmp	.+42     	; 0x370 <vfprintf+0x180>
 346:	28 01       	movw	r4, r16
 348:	22 e0       	ldi	r18, 0x02	; 2
 34a:	42 0e       	add	r4, r18
 34c:	51 1c       	adc	r5, r1
 34e:	f8 01       	movw	r30, r16
 350:	a0 80       	ld	r10, Z
 352:	b1 80       	ldd	r11, Z+1	; 0x01
 354:	36 fe       	sbrs	r3, 6
 356:	03 c0       	rjmp	.+6      	; 0x35e <vfprintf+0x16e>
 358:	69 2d       	mov	r22, r9
 35a:	70 e0       	ldi	r23, 0x00	; 0
 35c:	02 c0       	rjmp	.+4      	; 0x362 <vfprintf+0x172>
 35e:	6f ef       	ldi	r22, 0xFF	; 255
 360:	7f ef       	ldi	r23, 0xFF	; 255
 362:	c5 01       	movw	r24, r10
 364:	17 d1       	rcall	.+558    	; 0x594 <strnlen_P>
 366:	4c 01       	movw	r8, r24
 368:	f3 2d       	mov	r31, r3
 36a:	f0 68       	ori	r31, 0x80	; 128
 36c:	3f 2e       	mov	r3, r31
 36e:	82 01       	movw	r16, r4
 370:	33 fc       	sbrc	r3, 3
 372:	19 c0       	rjmp	.+50     	; 0x3a6 <vfprintf+0x1b6>
 374:	82 2d       	mov	r24, r2
 376:	90 e0       	ldi	r25, 0x00	; 0
 378:	88 16       	cp	r8, r24
 37a:	99 06       	cpc	r9, r25
 37c:	a0 f4       	brcc	.+40     	; 0x3a6 <vfprintf+0x1b6>
 37e:	b6 01       	movw	r22, r12
 380:	80 e2       	ldi	r24, 0x20	; 32
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	1d d1       	rcall	.+570    	; 0x5c0 <fputc>
 386:	2a 94       	dec	r2
 388:	f5 cf       	rjmp	.-22     	; 0x374 <vfprintf+0x184>
 38a:	f5 01       	movw	r30, r10
 38c:	37 fc       	sbrc	r3, 7
 38e:	85 91       	lpm	r24, Z+
 390:	37 fe       	sbrs	r3, 7
 392:	81 91       	ld	r24, Z+
 394:	5f 01       	movw	r10, r30
 396:	b6 01       	movw	r22, r12
 398:	90 e0       	ldi	r25, 0x00	; 0
 39a:	12 d1       	rcall	.+548    	; 0x5c0 <fputc>
 39c:	21 10       	cpse	r2, r1
 39e:	2a 94       	dec	r2
 3a0:	21 e0       	ldi	r18, 0x01	; 1
 3a2:	82 1a       	sub	r8, r18
 3a4:	91 08       	sbc	r9, r1
 3a6:	81 14       	cp	r8, r1
 3a8:	91 04       	cpc	r9, r1
 3aa:	79 f7       	brne	.-34     	; 0x38a <vfprintf+0x19a>
 3ac:	e1 c0       	rjmp	.+450    	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 3ae:	84 36       	cpi	r24, 0x64	; 100
 3b0:	11 f0       	breq	.+4      	; 0x3b6 <vfprintf+0x1c6>
 3b2:	89 36       	cpi	r24, 0x69	; 105
 3b4:	39 f5       	brne	.+78     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3b6:	f8 01       	movw	r30, r16
 3b8:	37 fe       	sbrs	r3, 7
 3ba:	07 c0       	rjmp	.+14     	; 0x3ca <vfprintf+0x1da>
 3bc:	60 81       	ld	r22, Z
 3be:	71 81       	ldd	r23, Z+1	; 0x01
 3c0:	82 81       	ldd	r24, Z+2	; 0x02
 3c2:	93 81       	ldd	r25, Z+3	; 0x03
 3c4:	0c 5f       	subi	r16, 0xFC	; 252
 3c6:	1f 4f       	sbci	r17, 0xFF	; 255
 3c8:	08 c0       	rjmp	.+16     	; 0x3da <vfprintf+0x1ea>
 3ca:	60 81       	ld	r22, Z
 3cc:	71 81       	ldd	r23, Z+1	; 0x01
 3ce:	07 2e       	mov	r0, r23
 3d0:	00 0c       	add	r0, r0
 3d2:	88 0b       	sbc	r24, r24
 3d4:	99 0b       	sbc	r25, r25
 3d6:	0e 5f       	subi	r16, 0xFE	; 254
 3d8:	1f 4f       	sbci	r17, 0xFF	; 255
 3da:	f3 2d       	mov	r31, r3
 3dc:	ff 76       	andi	r31, 0x6F	; 111
 3de:	3f 2e       	mov	r3, r31
 3e0:	97 ff       	sbrs	r25, 7
 3e2:	09 c0       	rjmp	.+18     	; 0x3f6 <vfprintf+0x206>
 3e4:	90 95       	com	r25
 3e6:	80 95       	com	r24
 3e8:	70 95       	com	r23
 3ea:	61 95       	neg	r22
 3ec:	7f 4f       	sbci	r23, 0xFF	; 255
 3ee:	8f 4f       	sbci	r24, 0xFF	; 255
 3f0:	9f 4f       	sbci	r25, 0xFF	; 255
 3f2:	f0 68       	ori	r31, 0x80	; 128
 3f4:	3f 2e       	mov	r3, r31
 3f6:	2a e0       	ldi	r18, 0x0A	; 10
 3f8:	30 e0       	ldi	r19, 0x00	; 0
 3fa:	a3 01       	movw	r20, r6
 3fc:	1d d1       	rcall	.+570    	; 0x638 <__ultoa_invert>
 3fe:	88 2e       	mov	r8, r24
 400:	86 18       	sub	r8, r6
 402:	44 c0       	rjmp	.+136    	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 404:	85 37       	cpi	r24, 0x75	; 117
 406:	31 f4       	brne	.+12     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 408:	23 2d       	mov	r18, r3
 40a:	2f 7e       	andi	r18, 0xEF	; 239
 40c:	b2 2e       	mov	r11, r18
 40e:	2a e0       	ldi	r18, 0x0A	; 10
 410:	30 e0       	ldi	r19, 0x00	; 0
 412:	25 c0       	rjmp	.+74     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 414:	93 2d       	mov	r25, r3
 416:	99 7f       	andi	r25, 0xF9	; 249
 418:	b9 2e       	mov	r11, r25
 41a:	8f 36       	cpi	r24, 0x6F	; 111
 41c:	c1 f0       	breq	.+48     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 41e:	18 f4       	brcc	.+6      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 420:	88 35       	cpi	r24, 0x58	; 88
 422:	79 f0       	breq	.+30     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 424:	ae c0       	rjmp	.+348    	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 426:	80 37       	cpi	r24, 0x70	; 112
 428:	19 f0       	breq	.+6      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 42a:	88 37       	cpi	r24, 0x78	; 120
 42c:	21 f0       	breq	.+8      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 42e:	a9 c0       	rjmp	.+338    	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 430:	e9 2f       	mov	r30, r25
 432:	e0 61       	ori	r30, 0x10	; 16
 434:	be 2e       	mov	r11, r30
 436:	b4 fe       	sbrs	r11, 4
 438:	0d c0       	rjmp	.+26     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 43a:	fb 2d       	mov	r31, r11
 43c:	f4 60       	ori	r31, 0x04	; 4
 43e:	bf 2e       	mov	r11, r31
 440:	09 c0       	rjmp	.+18     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 442:	34 fe       	sbrs	r3, 4
 444:	0a c0       	rjmp	.+20     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 446:	29 2f       	mov	r18, r25
 448:	26 60       	ori	r18, 0x06	; 6
 44a:	b2 2e       	mov	r11, r18
 44c:	06 c0       	rjmp	.+12     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 44e:	28 e0       	ldi	r18, 0x08	; 8
 450:	30 e0       	ldi	r19, 0x00	; 0
 452:	05 c0       	rjmp	.+10     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 454:	20 e1       	ldi	r18, 0x10	; 16
 456:	30 e0       	ldi	r19, 0x00	; 0
 458:	02 c0       	rjmp	.+4      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 45a:	20 e1       	ldi	r18, 0x10	; 16
 45c:	32 e0       	ldi	r19, 0x02	; 2
 45e:	f8 01       	movw	r30, r16
 460:	b7 fe       	sbrs	r11, 7
 462:	07 c0       	rjmp	.+14     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 464:	60 81       	ld	r22, Z
 466:	71 81       	ldd	r23, Z+1	; 0x01
 468:	82 81       	ldd	r24, Z+2	; 0x02
 46a:	93 81       	ldd	r25, Z+3	; 0x03
 46c:	0c 5f       	subi	r16, 0xFC	; 252
 46e:	1f 4f       	sbci	r17, 0xFF	; 255
 470:	06 c0       	rjmp	.+12     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 472:	60 81       	ld	r22, Z
 474:	71 81       	ldd	r23, Z+1	; 0x01
 476:	80 e0       	ldi	r24, 0x00	; 0
 478:	90 e0       	ldi	r25, 0x00	; 0
 47a:	0e 5f       	subi	r16, 0xFE	; 254
 47c:	1f 4f       	sbci	r17, 0xFF	; 255
 47e:	a3 01       	movw	r20, r6
 480:	db d0       	rcall	.+438    	; 0x638 <__ultoa_invert>
 482:	88 2e       	mov	r8, r24
 484:	86 18       	sub	r8, r6
 486:	fb 2d       	mov	r31, r11
 488:	ff 77       	andi	r31, 0x7F	; 127
 48a:	3f 2e       	mov	r3, r31
 48c:	36 fe       	sbrs	r3, 6
 48e:	0d c0       	rjmp	.+26     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 490:	23 2d       	mov	r18, r3
 492:	2e 7f       	andi	r18, 0xFE	; 254
 494:	a2 2e       	mov	r10, r18
 496:	89 14       	cp	r8, r9
 498:	58 f4       	brcc	.+22     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 49a:	34 fe       	sbrs	r3, 4
 49c:	0b c0       	rjmp	.+22     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 49e:	32 fc       	sbrc	r3, 2
 4a0:	09 c0       	rjmp	.+18     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 4a2:	83 2d       	mov	r24, r3
 4a4:	8e 7e       	andi	r24, 0xEE	; 238
 4a6:	a8 2e       	mov	r10, r24
 4a8:	05 c0       	rjmp	.+10     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 4aa:	b8 2c       	mov	r11, r8
 4ac:	a3 2c       	mov	r10, r3
 4ae:	03 c0       	rjmp	.+6      	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4b0:	b8 2c       	mov	r11, r8
 4b2:	01 c0       	rjmp	.+2      	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4b4:	b9 2c       	mov	r11, r9
 4b6:	a4 fe       	sbrs	r10, 4
 4b8:	0f c0       	rjmp	.+30     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4ba:	fe 01       	movw	r30, r28
 4bc:	e8 0d       	add	r30, r8
 4be:	f1 1d       	adc	r31, r1
 4c0:	80 81       	ld	r24, Z
 4c2:	80 33       	cpi	r24, 0x30	; 48
 4c4:	21 f4       	brne	.+8      	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4c6:	9a 2d       	mov	r25, r10
 4c8:	99 7e       	andi	r25, 0xE9	; 233
 4ca:	a9 2e       	mov	r10, r25
 4cc:	09 c0       	rjmp	.+18     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4ce:	a2 fe       	sbrs	r10, 2
 4d0:	06 c0       	rjmp	.+12     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4d2:	b3 94       	inc	r11
 4d4:	b3 94       	inc	r11
 4d6:	04 c0       	rjmp	.+8      	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4d8:	8a 2d       	mov	r24, r10
 4da:	86 78       	andi	r24, 0x86	; 134
 4dc:	09 f0       	breq	.+2      	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4de:	b3 94       	inc	r11
 4e0:	a3 fc       	sbrc	r10, 3
 4e2:	10 c0       	rjmp	.+32     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4e4:	a0 fe       	sbrs	r10, 0
 4e6:	06 c0       	rjmp	.+12     	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4e8:	b2 14       	cp	r11, r2
 4ea:	80 f4       	brcc	.+32     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 4ec:	28 0c       	add	r2, r8
 4ee:	92 2c       	mov	r9, r2
 4f0:	9b 18       	sub	r9, r11
 4f2:	0d c0       	rjmp	.+26     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 4f4:	b2 14       	cp	r11, r2
 4f6:	58 f4       	brcc	.+22     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 4f8:	b6 01       	movw	r22, r12
 4fa:	80 e2       	ldi	r24, 0x20	; 32
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	60 d0       	rcall	.+192    	; 0x5c0 <fputc>
 500:	b3 94       	inc	r11
 502:	f8 cf       	rjmp	.-16     	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 504:	b2 14       	cp	r11, r2
 506:	18 f4       	brcc	.+6      	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 508:	2b 18       	sub	r2, r11
 50a:	02 c0       	rjmp	.+4      	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 50c:	98 2c       	mov	r9, r8
 50e:	21 2c       	mov	r2, r1
 510:	a4 fe       	sbrs	r10, 4
 512:	0f c0       	rjmp	.+30     	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 514:	b6 01       	movw	r22, r12
 516:	80 e3       	ldi	r24, 0x30	; 48
 518:	90 e0       	ldi	r25, 0x00	; 0
 51a:	52 d0       	rcall	.+164    	; 0x5c0 <fputc>
 51c:	a2 fe       	sbrs	r10, 2
 51e:	16 c0       	rjmp	.+44     	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 520:	a1 fc       	sbrc	r10, 1
 522:	03 c0       	rjmp	.+6      	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 524:	88 e7       	ldi	r24, 0x78	; 120
 526:	90 e0       	ldi	r25, 0x00	; 0
 528:	02 c0       	rjmp	.+4      	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 52a:	88 e5       	ldi	r24, 0x58	; 88
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	b6 01       	movw	r22, r12
 530:	0c c0       	rjmp	.+24     	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
 532:	8a 2d       	mov	r24, r10
 534:	86 78       	andi	r24, 0x86	; 134
 536:	51 f0       	breq	.+20     	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 538:	a1 fe       	sbrs	r10, 1
 53a:	02 c0       	rjmp	.+4      	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 53c:	8b e2       	ldi	r24, 0x2B	; 43
 53e:	01 c0       	rjmp	.+2      	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 540:	80 e2       	ldi	r24, 0x20	; 32
 542:	a7 fc       	sbrc	r10, 7
 544:	8d e2       	ldi	r24, 0x2D	; 45
 546:	b6 01       	movw	r22, r12
 548:	90 e0       	ldi	r25, 0x00	; 0
 54a:	3a d0       	rcall	.+116    	; 0x5c0 <fputc>
 54c:	89 14       	cp	r8, r9
 54e:	30 f4       	brcc	.+12     	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 550:	b6 01       	movw	r22, r12
 552:	80 e3       	ldi	r24, 0x30	; 48
 554:	90 e0       	ldi	r25, 0x00	; 0
 556:	34 d0       	rcall	.+104    	; 0x5c0 <fputc>
 558:	9a 94       	dec	r9
 55a:	f8 cf       	rjmp	.-16     	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 55c:	8a 94       	dec	r8
 55e:	f3 01       	movw	r30, r6
 560:	e8 0d       	add	r30, r8
 562:	f1 1d       	adc	r31, r1
 564:	80 81       	ld	r24, Z
 566:	b6 01       	movw	r22, r12
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	2a d0       	rcall	.+84     	; 0x5c0 <fputc>
 56c:	81 10       	cpse	r8, r1
 56e:	f6 cf       	rjmp	.-20     	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 570:	22 20       	and	r2, r2
 572:	09 f4       	brne	.+2      	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 574:	4e ce       	rjmp	.-868    	; 0x212 <vfprintf+0x22>
 576:	b6 01       	movw	r22, r12
 578:	80 e2       	ldi	r24, 0x20	; 32
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	21 d0       	rcall	.+66     	; 0x5c0 <fputc>
 57e:	2a 94       	dec	r2
 580:	f7 cf       	rjmp	.-18     	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 582:	f6 01       	movw	r30, r12
 584:	86 81       	ldd	r24, Z+6	; 0x06
 586:	97 81       	ldd	r25, Z+7	; 0x07
 588:	02 c0       	rjmp	.+4      	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 58a:	8f ef       	ldi	r24, 0xFF	; 255
 58c:	9f ef       	ldi	r25, 0xFF	; 255
 58e:	2b 96       	adiw	r28, 0x0b	; 11
 590:	e2 e1       	ldi	r30, 0x12	; 18
 592:	cc c0       	rjmp	.+408    	; 0x72c <__epilogue_restores__>

00000594 <strnlen_P>:
 594:	fc 01       	movw	r30, r24
 596:	05 90       	lpm	r0, Z+
 598:	61 50       	subi	r22, 0x01	; 1
 59a:	70 40       	sbci	r23, 0x00	; 0
 59c:	01 10       	cpse	r0, r1
 59e:	d8 f7       	brcc	.-10     	; 0x596 <strnlen_P+0x2>
 5a0:	80 95       	com	r24
 5a2:	90 95       	com	r25
 5a4:	8e 0f       	add	r24, r30
 5a6:	9f 1f       	adc	r25, r31
 5a8:	08 95       	ret

000005aa <strnlen>:
 5aa:	fc 01       	movw	r30, r24
 5ac:	61 50       	subi	r22, 0x01	; 1
 5ae:	70 40       	sbci	r23, 0x00	; 0
 5b0:	01 90       	ld	r0, Z+
 5b2:	01 10       	cpse	r0, r1
 5b4:	d8 f7       	brcc	.-10     	; 0x5ac <strnlen+0x2>
 5b6:	80 95       	com	r24
 5b8:	90 95       	com	r25
 5ba:	8e 0f       	add	r24, r30
 5bc:	9f 1f       	adc	r25, r31
 5be:	08 95       	ret

000005c0 <fputc>:
 5c0:	0f 93       	push	r16
 5c2:	1f 93       	push	r17
 5c4:	cf 93       	push	r28
 5c6:	df 93       	push	r29
 5c8:	fb 01       	movw	r30, r22
 5ca:	23 81       	ldd	r18, Z+3	; 0x03
 5cc:	21 fd       	sbrc	r18, 1
 5ce:	03 c0       	rjmp	.+6      	; 0x5d6 <fputc+0x16>
 5d0:	8f ef       	ldi	r24, 0xFF	; 255
 5d2:	9f ef       	ldi	r25, 0xFF	; 255
 5d4:	2c c0       	rjmp	.+88     	; 0x62e <fputc+0x6e>
 5d6:	22 ff       	sbrs	r18, 2
 5d8:	16 c0       	rjmp	.+44     	; 0x606 <fputc+0x46>
 5da:	46 81       	ldd	r20, Z+6	; 0x06
 5dc:	57 81       	ldd	r21, Z+7	; 0x07
 5de:	24 81       	ldd	r18, Z+4	; 0x04
 5e0:	35 81       	ldd	r19, Z+5	; 0x05
 5e2:	42 17       	cp	r20, r18
 5e4:	53 07       	cpc	r21, r19
 5e6:	44 f4       	brge	.+16     	; 0x5f8 <fputc+0x38>
 5e8:	a0 81       	ld	r26, Z
 5ea:	b1 81       	ldd	r27, Z+1	; 0x01
 5ec:	9d 01       	movw	r18, r26
 5ee:	2f 5f       	subi	r18, 0xFF	; 255
 5f0:	3f 4f       	sbci	r19, 0xFF	; 255
 5f2:	31 83       	std	Z+1, r19	; 0x01
 5f4:	20 83       	st	Z, r18
 5f6:	8c 93       	st	X, r24
 5f8:	26 81       	ldd	r18, Z+6	; 0x06
 5fa:	37 81       	ldd	r19, Z+7	; 0x07
 5fc:	2f 5f       	subi	r18, 0xFF	; 255
 5fe:	3f 4f       	sbci	r19, 0xFF	; 255
 600:	37 83       	std	Z+7, r19	; 0x07
 602:	26 83       	std	Z+6, r18	; 0x06
 604:	14 c0       	rjmp	.+40     	; 0x62e <fputc+0x6e>
 606:	8b 01       	movw	r16, r22
 608:	ec 01       	movw	r28, r24
 60a:	fb 01       	movw	r30, r22
 60c:	00 84       	ldd	r0, Z+8	; 0x08
 60e:	f1 85       	ldd	r31, Z+9	; 0x09
 610:	e0 2d       	mov	r30, r0
 612:	09 95       	icall
 614:	89 2b       	or	r24, r25
 616:	e1 f6       	brne	.-72     	; 0x5d0 <fputc+0x10>
 618:	d8 01       	movw	r26, r16
 61a:	16 96       	adiw	r26, 0x06	; 6
 61c:	8d 91       	ld	r24, X+
 61e:	9c 91       	ld	r25, X
 620:	17 97       	sbiw	r26, 0x07	; 7
 622:	01 96       	adiw	r24, 0x01	; 1
 624:	17 96       	adiw	r26, 0x07	; 7
 626:	9c 93       	st	X, r25
 628:	8e 93       	st	-X, r24
 62a:	16 97       	sbiw	r26, 0x06	; 6
 62c:	ce 01       	movw	r24, r28
 62e:	df 91       	pop	r29
 630:	cf 91       	pop	r28
 632:	1f 91       	pop	r17
 634:	0f 91       	pop	r16
 636:	08 95       	ret

00000638 <__ultoa_invert>:
 638:	fa 01       	movw	r30, r20
 63a:	aa 27       	eor	r26, r26
 63c:	28 30       	cpi	r18, 0x08	; 8
 63e:	51 f1       	breq	.+84     	; 0x694 <__ultoa_invert+0x5c>
 640:	20 31       	cpi	r18, 0x10	; 16
 642:	81 f1       	breq	.+96     	; 0x6a4 <__ultoa_invert+0x6c>
 644:	e8 94       	clt
 646:	6f 93       	push	r22
 648:	6e 7f       	andi	r22, 0xFE	; 254
 64a:	6e 5f       	subi	r22, 0xFE	; 254
 64c:	7f 4f       	sbci	r23, 0xFF	; 255
 64e:	8f 4f       	sbci	r24, 0xFF	; 255
 650:	9f 4f       	sbci	r25, 0xFF	; 255
 652:	af 4f       	sbci	r26, 0xFF	; 255
 654:	b1 e0       	ldi	r27, 0x01	; 1
 656:	3e d0       	rcall	.+124    	; 0x6d4 <__ultoa_invert+0x9c>
 658:	b4 e0       	ldi	r27, 0x04	; 4
 65a:	3c d0       	rcall	.+120    	; 0x6d4 <__ultoa_invert+0x9c>
 65c:	67 0f       	add	r22, r23
 65e:	78 1f       	adc	r23, r24
 660:	89 1f       	adc	r24, r25
 662:	9a 1f       	adc	r25, r26
 664:	a1 1d       	adc	r26, r1
 666:	68 0f       	add	r22, r24
 668:	79 1f       	adc	r23, r25
 66a:	8a 1f       	adc	r24, r26
 66c:	91 1d       	adc	r25, r1
 66e:	a1 1d       	adc	r26, r1
 670:	6a 0f       	add	r22, r26
 672:	71 1d       	adc	r23, r1
 674:	81 1d       	adc	r24, r1
 676:	91 1d       	adc	r25, r1
 678:	a1 1d       	adc	r26, r1
 67a:	20 d0       	rcall	.+64     	; 0x6bc <__ultoa_invert+0x84>
 67c:	09 f4       	brne	.+2      	; 0x680 <__ultoa_invert+0x48>
 67e:	68 94       	set
 680:	3f 91       	pop	r19
 682:	2a e0       	ldi	r18, 0x0A	; 10
 684:	26 9f       	mul	r18, r22
 686:	11 24       	eor	r1, r1
 688:	30 19       	sub	r19, r0
 68a:	30 5d       	subi	r19, 0xD0	; 208
 68c:	31 93       	st	Z+, r19
 68e:	de f6       	brtc	.-74     	; 0x646 <__ultoa_invert+0xe>
 690:	cf 01       	movw	r24, r30
 692:	08 95       	ret
 694:	46 2f       	mov	r20, r22
 696:	47 70       	andi	r20, 0x07	; 7
 698:	40 5d       	subi	r20, 0xD0	; 208
 69a:	41 93       	st	Z+, r20
 69c:	b3 e0       	ldi	r27, 0x03	; 3
 69e:	0f d0       	rcall	.+30     	; 0x6be <__ultoa_invert+0x86>
 6a0:	c9 f7       	brne	.-14     	; 0x694 <__ultoa_invert+0x5c>
 6a2:	f6 cf       	rjmp	.-20     	; 0x690 <__ultoa_invert+0x58>
 6a4:	46 2f       	mov	r20, r22
 6a6:	4f 70       	andi	r20, 0x0F	; 15
 6a8:	40 5d       	subi	r20, 0xD0	; 208
 6aa:	4a 33       	cpi	r20, 0x3A	; 58
 6ac:	18 f0       	brcs	.+6      	; 0x6b4 <__ultoa_invert+0x7c>
 6ae:	49 5d       	subi	r20, 0xD9	; 217
 6b0:	31 fd       	sbrc	r19, 1
 6b2:	40 52       	subi	r20, 0x20	; 32
 6b4:	41 93       	st	Z+, r20
 6b6:	02 d0       	rcall	.+4      	; 0x6bc <__ultoa_invert+0x84>
 6b8:	a9 f7       	brne	.-22     	; 0x6a4 <__ultoa_invert+0x6c>
 6ba:	ea cf       	rjmp	.-44     	; 0x690 <__ultoa_invert+0x58>
 6bc:	b4 e0       	ldi	r27, 0x04	; 4
 6be:	a6 95       	lsr	r26
 6c0:	97 95       	ror	r25
 6c2:	87 95       	ror	r24
 6c4:	77 95       	ror	r23
 6c6:	67 95       	ror	r22
 6c8:	ba 95       	dec	r27
 6ca:	c9 f7       	brne	.-14     	; 0x6be <__ultoa_invert+0x86>
 6cc:	00 97       	sbiw	r24, 0x00	; 0
 6ce:	61 05       	cpc	r22, r1
 6d0:	71 05       	cpc	r23, r1
 6d2:	08 95       	ret
 6d4:	9b 01       	movw	r18, r22
 6d6:	ac 01       	movw	r20, r24
 6d8:	0a 2e       	mov	r0, r26
 6da:	06 94       	lsr	r0
 6dc:	57 95       	ror	r21
 6de:	47 95       	ror	r20
 6e0:	37 95       	ror	r19
 6e2:	27 95       	ror	r18
 6e4:	ba 95       	dec	r27
 6e6:	c9 f7       	brne	.-14     	; 0x6da <__ultoa_invert+0xa2>
 6e8:	62 0f       	add	r22, r18
 6ea:	73 1f       	adc	r23, r19
 6ec:	84 1f       	adc	r24, r20
 6ee:	95 1f       	adc	r25, r21
 6f0:	a0 1d       	adc	r26, r0
 6f2:	08 95       	ret

000006f4 <__prologue_saves__>:
 6f4:	2f 92       	push	r2
 6f6:	3f 92       	push	r3
 6f8:	4f 92       	push	r4
 6fa:	5f 92       	push	r5
 6fc:	6f 92       	push	r6
 6fe:	7f 92       	push	r7
 700:	8f 92       	push	r8
 702:	9f 92       	push	r9
 704:	af 92       	push	r10
 706:	bf 92       	push	r11
 708:	cf 92       	push	r12
 70a:	df 92       	push	r13
 70c:	ef 92       	push	r14
 70e:	ff 92       	push	r15
 710:	0f 93       	push	r16
 712:	1f 93       	push	r17
 714:	cf 93       	push	r28
 716:	df 93       	push	r29
 718:	cd b7       	in	r28, 0x3d	; 61
 71a:	de b7       	in	r29, 0x3e	; 62
 71c:	ca 1b       	sub	r28, r26
 71e:	db 0b       	sbc	r29, r27
 720:	0f b6       	in	r0, 0x3f	; 63
 722:	f8 94       	cli
 724:	de bf       	out	0x3e, r29	; 62
 726:	0f be       	out	0x3f, r0	; 63
 728:	cd bf       	out	0x3d, r28	; 61
 72a:	09 94       	ijmp

0000072c <__epilogue_restores__>:
 72c:	2a 88       	ldd	r2, Y+18	; 0x12
 72e:	39 88       	ldd	r3, Y+17	; 0x11
 730:	48 88       	ldd	r4, Y+16	; 0x10
 732:	5f 84       	ldd	r5, Y+15	; 0x0f
 734:	6e 84       	ldd	r6, Y+14	; 0x0e
 736:	7d 84       	ldd	r7, Y+13	; 0x0d
 738:	8c 84       	ldd	r8, Y+12	; 0x0c
 73a:	9b 84       	ldd	r9, Y+11	; 0x0b
 73c:	aa 84       	ldd	r10, Y+10	; 0x0a
 73e:	b9 84       	ldd	r11, Y+9	; 0x09
 740:	c8 84       	ldd	r12, Y+8	; 0x08
 742:	df 80       	ldd	r13, Y+7	; 0x07
 744:	ee 80       	ldd	r14, Y+6	; 0x06
 746:	fd 80       	ldd	r15, Y+5	; 0x05
 748:	0c 81       	ldd	r16, Y+4	; 0x04
 74a:	1b 81       	ldd	r17, Y+3	; 0x03
 74c:	aa 81       	ldd	r26, Y+2	; 0x02
 74e:	b9 81       	ldd	r27, Y+1	; 0x01
 750:	ce 0f       	add	r28, r30
 752:	d1 1d       	adc	r29, r1
 754:	0f b6       	in	r0, 0x3f	; 63
 756:	f8 94       	cli
 758:	de bf       	out	0x3e, r29	; 62
 75a:	0f be       	out	0x3f, r0	; 63
 75c:	cd bf       	out	0x3d, r28	; 61
 75e:	ed 01       	movw	r28, r26
 760:	08 95       	ret

00000762 <_exit>:
 762:	f8 94       	cli

00000764 <__stop_program>:
 764:	ff cf       	rjmp	.-2      	; 0x764 <__stop_program>
