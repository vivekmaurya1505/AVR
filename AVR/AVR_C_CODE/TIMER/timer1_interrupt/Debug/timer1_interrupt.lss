
timer1_interrupt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000148  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000f4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000148  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000178  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  000001b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000084c  00000000  00000000  000001e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007a9  00000000  00000000  00000a30  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000025a  00000000  00000000  000011d9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000058  00000000  00000000  00001434  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003cb  00000000  00000000  0000148c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000049  00000000  00000000  00001857  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  000018a0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   8:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  10:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  14:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  18:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  1c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  20:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  24:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  28:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  2c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  30:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  34:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  38:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__vector_14>
  3c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  40:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  44:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  48:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  4c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  50:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  54:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  58:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  5c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  60:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  64:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  68:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  6c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  70:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  74:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  78:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  7c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  80:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  84:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  88:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	0e 94 5e 00 	call	0xbc	; 0xbc <main>
  9c:	0c 94 78 00 	jmp	0xf0	; 0xf0 <_exit>

000000a0 <__bad_interrupt>:
  a0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a4 <timer1_init>:
	{
		
	}
}
void timer1_init(){
	sei();                        //global interrupt enable
  a4:	78 94       	sei
	TIMSK|=(1<<TOIE1);            //timer 1 interrupt enable
  a6:	87 b7       	in	r24, 0x37	; 55
  a8:	84 60       	ori	r24, 0x04	; 4
  aa:	87 bf       	out	0x37, r24	; 55
	TCNT1=49536;                  // set value
  ac:	80 e8       	ldi	r24, 0x80	; 128
  ae:	91 ec       	ldi	r25, 0xC1	; 193
  b0:	9d bd       	out	0x2d, r25	; 45
  b2:	8c bd       	out	0x2c, r24	; 44
	TCCR1B|=(1<<CS10)|(1<<CS12);    //prescaler of  1024
  b4:	8e b5       	in	r24, 0x2e	; 46
  b6:	85 60       	ori	r24, 0x05	; 5
  b8:	8e bd       	out	0x2e, r24	; 46
  ba:	08 95       	ret

000000bc <main>:
#include <avr/interrupt.h>
void timer1_init();
//================================
int main(void)
{
	DDRC=0XFF;                   //set direction port c as a output for led
  bc:	8f ef       	ldi	r24, 0xFF	; 255
  be:	84 bb       	out	0x14, r24	; 20
	
	timer1_init();              //timer1 initialization
  c0:	0e 94 52 00 	call	0xa4	; 0xa4 <timer1_init>
  c4:	ff cf       	rjmp	.-2      	; 0xc4 <main+0x8>

000000c6 <__vector_14>:
	sei();                        //global interrupt enable
	TIMSK|=(1<<TOIE1);            //timer 1 interrupt enable
	TCNT1=49536;                  // set value
	TCCR1B|=(1<<CS10)|(1<<CS12);    //prescaler of  1024
}
ISR(TIMER1_OVF_vect){              // ISR for timer1
  c6:	1f 92       	push	r1
  c8:	0f 92       	push	r0
  ca:	0f b6       	in	r0, 0x3f	; 63
  cc:	0f 92       	push	r0
  ce:	11 24       	eor	r1, r1
  d0:	8f 93       	push	r24
  d2:	9f 93       	push	r25
	
	
	PORTC =~PORTC;                     //led toggle
  d4:	85 b3       	in	r24, 0x15	; 21
  d6:	80 95       	com	r24
  d8:	85 bb       	out	0x15, r24	; 21
	TCNT1=49536;                      //TCNT1=49536 increase upto 65535 for 1 ms 
  da:	80 e8       	ldi	r24, 0x80	; 128
  dc:	91 ec       	ldi	r25, 0xC1	; 193
  de:	9d bd       	out	0x2d, r25	; 45
  e0:	8c bd       	out	0x2c, r24	; 44
	
}
  e2:	9f 91       	pop	r25
  e4:	8f 91       	pop	r24
  e6:	0f 90       	pop	r0
  e8:	0f be       	out	0x3f, r0	; 63
  ea:	0f 90       	pop	r0
  ec:	1f 90       	pop	r1
  ee:	18 95       	reti

000000f0 <_exit>:
  f0:	f8 94       	cli

000000f2 <__stop_program>:
  f2:	ff cf       	rjmp	.-2      	; 0xf2 <__stop_program>
