
timer1_interrupt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000001fe  00000272  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001fe  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000276  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002a8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  000002e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c28  00000000  00000000  00000344  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000940  00000000  00000000  00000f6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000040c  00000000  00000000  000018ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000108  00000000  00000000  00001cb8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000047b  00000000  00000000  00001dc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003cb  00000000  00000000  0000223b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00002606  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__vector_14>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  70:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  7c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  80:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  84:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  88:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee ef       	ldi	r30, 0xFE	; 254
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <__do_copy_data+0x10>
  a4:	05 90       	lpm	r0, Z+
  a6:	0d 92       	st	X+, r0
  a8:	a4 30       	cpi	r26, 0x04	; 4
  aa:	b1 07       	cpc	r27, r17
  ac:	d9 f7       	brne	.-10     	; 0xa4 <__do_copy_data+0xc>
  ae:	0e 94 c9 00 	call	0x192	; 0x192 <main>
  b2:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <en>:
	for(unsigned int i=0;str[i]!='\0';i++){
		lcd_data(str[i]);
	}
}
void lcd_result(int result,char *buffer,int base){
	lcd_string(itoa(result, buffer, base));
  ba:	da 9a       	sbi	0x1b, 2	; 27
  bc:	8f e5       	ldi	r24, 0x5F	; 95
  be:	9a ee       	ldi	r25, 0xEA	; 234
  c0:	01 97       	sbiw	r24, 0x01	; 1
  c2:	f1 f7       	brne	.-4      	; 0xc0 <en+0x6>
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <en+0xc>
  c6:	00 00       	nop
  c8:	da 98       	cbi	0x1b, 2	; 27
  ca:	8f e1       	ldi	r24, 0x1F	; 31
  cc:	9e e4       	ldi	r25, 0x4E	; 78
  ce:	01 97       	sbiw	r24, 0x01	; 1
  d0:	f1 f7       	brne	.-4      	; 0xce <en+0x14>
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <en+0x1a>
  d4:	00 00       	nop
  d6:	08 95       	ret

000000d8 <lcd_cmd>:
  d8:	cf 93       	push	r28
  da:	c8 2f       	mov	r28, r24
  dc:	80 7f       	andi	r24, 0xF0	; 240
  de:	8b bb       	out	0x1b, r24	; 27
  e0:	0e 94 5d 00 	call	0xba	; 0xba <en>
  e4:	c2 95       	swap	r28
  e6:	c0 7f       	andi	r28, 0xF0	; 240
  e8:	cb bb       	out	0x1b, r28	; 27
  ea:	0e 94 5d 00 	call	0xba	; 0xba <en>
  ee:	cf 91       	pop	r28
  f0:	08 95       	ret

000000f2 <lcd_data>:
  f2:	cf 93       	push	r28
  f4:	c8 2f       	mov	r28, r24
  f6:	80 7f       	andi	r24, 0xF0	; 240
  f8:	81 60       	ori	r24, 0x01	; 1
  fa:	8b bb       	out	0x1b, r24	; 27
  fc:	0e 94 5d 00 	call	0xba	; 0xba <en>
 100:	20 e1       	ldi	r18, 0x10	; 16
 102:	c2 9f       	mul	r28, r18
 104:	c0 01       	movw	r24, r0
 106:	11 24       	eor	r1, r1
 108:	81 60       	ori	r24, 0x01	; 1
 10a:	8b bb       	out	0x1b, r24	; 27
 10c:	0e 94 5d 00 	call	0xba	; 0xba <en>
 110:	cf 91       	pop	r28
 112:	08 95       	ret

00000114 <lcd_init>:
 114:	2f ef       	ldi	r18, 0xFF	; 255
 116:	89 ef       	ldi	r24, 0xF9	; 249
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	21 50       	subi	r18, 0x01	; 1
 11c:	80 40       	sbci	r24, 0x00	; 0
 11e:	90 40       	sbci	r25, 0x00	; 0
 120:	e1 f7       	brne	.-8      	; 0x11a <lcd_init+0x6>
 122:	00 c0       	rjmp	.+0      	; 0x124 <lcd_init+0x10>
 124:	00 00       	nop
 126:	85 ef       	ldi	r24, 0xF5	; 245
 128:	8a bb       	out	0x1a, r24	; 26
 12a:	82 e0       	ldi	r24, 0x02	; 2
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	0e 94 6c 00 	call	0xd8	; 0xd8 <lcd_cmd>
 132:	88 e2       	ldi	r24, 0x28	; 40
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	0e 94 6c 00 	call	0xd8	; 0xd8 <lcd_cmd>
 13a:	81 e0       	ldi	r24, 0x01	; 1
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	0e 94 6c 00 	call	0xd8	; 0xd8 <lcd_cmd>
 142:	8f e0       	ldi	r24, 0x0F	; 15
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	0e 94 6c 00 	call	0xd8	; 0xd8 <lcd_cmd>
 14a:	86 e0       	ldi	r24, 0x06	; 6
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	0e 94 6c 00 	call	0xd8	; 0xd8 <lcd_cmd>
 152:	80 e8       	ldi	r24, 0x80	; 128
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	0e 94 6c 00 	call	0xd8	; 0xd8 <lcd_cmd>
 15a:	08 95       	ret

0000015c <lcd_string>:
 15c:	cf 93       	push	r28
 15e:	df 93       	push	r29
 160:	ec 01       	movw	r28, r24
 162:	88 81       	ld	r24, Y
 164:	88 23       	and	r24, r24
 166:	31 f0       	breq	.+12     	; 0x174 <lcd_string+0x18>
 168:	21 96       	adiw	r28, 0x01	; 1
 16a:	0e 94 79 00 	call	0xf2	; 0xf2 <lcd_data>
 16e:	89 91       	ld	r24, Y+
 170:	81 11       	cpse	r24, r1
 172:	fb cf       	rjmp	.-10     	; 0x16a <lcd_string+0xe>
 174:	df 91       	pop	r29
 176:	cf 91       	pop	r28
 178:	08 95       	ret

0000017a <timer1_init>:
	{
		
	}
}
void timer1_init(){
	sei();
 17a:	78 94       	sei
	TIMSK|=(1<<TOIE1);
 17c:	87 b7       	in	r24, 0x37	; 55
 17e:	84 60       	ori	r24, 0x04	; 4
 180:	87 bf       	out	0x37, r24	; 55
	TCNT1=49536;
 182:	80 e8       	ldi	r24, 0x80	; 128
 184:	91 ec       	ldi	r25, 0xC1	; 193
 186:	9d bd       	out	0x2d, r25	; 45
 188:	8c bd       	out	0x2c, r24	; 44
	TCCR1B|=(1<<CS10)|(1<<CS12);    //   1024
 18a:	8e b5       	in	r24, 0x2e	; 46
 18c:	85 60       	ori	r24, 0x05	; 5
 18e:	8e bd       	out	0x2e, r24	; 46
 190:	08 95       	ret

00000192 <main>:



int main(void)
{
	DDRC=0XFF;
 192:	8f ef       	ldi	r24, 0xFF	; 255
 194:	84 bb       	out	0x14, r24	; 20
	lcd_init();
 196:	0e 94 8a 00 	call	0x114	; 0x114 <lcd_init>
	timer1_init();
 19a:	0e 94 bd 00 	call	0x17a	; 0x17a <timer1_init>
 19e:	ff cf       	rjmp	.-2      	; 0x19e <main+0xc>

000001a0 <__vector_14>:
	sei();
	TIMSK|=(1<<TOIE1);
	TCNT1=49536;
	TCCR1B|=(1<<CS10)|(1<<CS12);    //   1024
}
ISR(TIMER1_OVF_vect){
 1a0:	1f 92       	push	r1
 1a2:	0f 92       	push	r0
 1a4:	0f b6       	in	r0, 0x3f	; 63
 1a6:	0f 92       	push	r0
 1a8:	11 24       	eor	r1, r1
 1aa:	2f 93       	push	r18
 1ac:	3f 93       	push	r19
 1ae:	4f 93       	push	r20
 1b0:	5f 93       	push	r21
 1b2:	6f 93       	push	r22
 1b4:	7f 93       	push	r23
 1b6:	8f 93       	push	r24
 1b8:	9f 93       	push	r25
 1ba:	af 93       	push	r26
 1bc:	bf 93       	push	r27
 1be:	ef 93       	push	r30
 1c0:	ff 93       	push	r31
	
	
	PORTC =~PORTC;
 1c2:	85 b3       	in	r24, 0x15	; 21
 1c4:	80 95       	com	r24
 1c6:	85 bb       	out	0x15, r24	; 21
	lcd_string("bcd");
 1c8:	80 e0       	ldi	r24, 0x00	; 0
 1ca:	91 e0       	ldi	r25, 0x01	; 1
 1cc:	0e 94 ae 00 	call	0x15c	; 0x15c <lcd_string>
	TCNT1=49536;
 1d0:	80 e8       	ldi	r24, 0x80	; 128
 1d2:	91 ec       	ldi	r25, 0xC1	; 193
 1d4:	9d bd       	out	0x2d, r25	; 45
 1d6:	8c bd       	out	0x2c, r24	; 44
	
}
 1d8:	ff 91       	pop	r31
 1da:	ef 91       	pop	r30
 1dc:	bf 91       	pop	r27
 1de:	af 91       	pop	r26
 1e0:	9f 91       	pop	r25
 1e2:	8f 91       	pop	r24
 1e4:	7f 91       	pop	r23
 1e6:	6f 91       	pop	r22
 1e8:	5f 91       	pop	r21
 1ea:	4f 91       	pop	r20
 1ec:	3f 91       	pop	r19
 1ee:	2f 91       	pop	r18
 1f0:	0f 90       	pop	r0
 1f2:	0f be       	out	0x3f, r0	; 63
 1f4:	0f 90       	pop	r0
 1f6:	1f 90       	pop	r1
 1f8:	18 95       	reti

000001fa <_exit>:
 1fa:	f8 94       	cli

000001fc <__stop_program>:
 1fc:	ff cf       	rjmp	.-2      	; 0x1fc <__stop_program>
