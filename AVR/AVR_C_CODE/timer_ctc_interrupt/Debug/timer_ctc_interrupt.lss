
timer_ctc_interrupt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000140  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000ec  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000140  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000170  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  000001ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000084c  00000000  00000000  000001dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007a9  00000000  00000000  00000a28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000025a  00000000  00000000  000011d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000054  00000000  00000000  0000142c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003c7  00000000  00000000  00001480  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000003c  00000000  00000000  00001847  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00001883  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   8:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  10:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  14:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  18:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  1c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  20:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  24:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  28:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  2c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  30:	0c 94 65 00 	jmp	0xca	; 0xca <__vector_12>
  34:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  38:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  3c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  40:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  44:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  48:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  4c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  50:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  54:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  58:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  5c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  60:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  64:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  68:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  6c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  70:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  74:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  78:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  7c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  80:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  84:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  88:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	0e 94 60 00 	call	0xc0	; 0xc0 <main>
  9c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <_exit>

000000a0 <__bad_interrupt>:
  a0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a4 <timer1_init>:
	timer1_init();                             
	while (1){                                     
	}
}
void timer1_init(){
	sei();
  a4:	78 94       	sei
	TIMSK|=(1<<OCIE1A);
  a6:	87 b7       	in	r24, 0x37	; 55
  a8:	80 61       	ori	r24, 0x10	; 16
  aa:	87 bf       	out	0x37, r24	; 55
	TCNT1=0;
  ac:	1d bc       	out	0x2d, r1	; 45
  ae:	1c bc       	out	0x2c, r1	; 44
	OCR1A=15624;
  b0:	88 e0       	ldi	r24, 0x08	; 8
  b2:	9d e3       	ldi	r25, 0x3D	; 61
  b4:	9b bd       	out	0x2b, r25	; 43
  b6:	8a bd       	out	0x2a, r24	; 42
	TCCR1B|=(1<<CS10)|(1<<WGM12)|(1<<CS12);
  b8:	8e b5       	in	r24, 0x2e	; 46
  ba:	8d 60       	ori	r24, 0x0D	; 13
  bc:	8e bd       	out	0x2e, r24	; 46
  be:	08 95       	ret

000000c0 <main>:
#include <avr/interrupt.h>
void timer1_init();

int main(void)
{
	DDRC=0xff;
  c0:	8f ef       	ldi	r24, 0xFF	; 255
  c2:	84 bb       	out	0x14, r24	; 20
	timer1_init();                             
  c4:	0e 94 52 00 	call	0xa4	; 0xa4 <timer1_init>
  c8:	ff cf       	rjmp	.-2      	; 0xc8 <main+0x8>

000000ca <__vector_12>:
	TCNT1=0;
	OCR1A=15624;
	TCCR1B|=(1<<CS10)|(1<<WGM12)|(1<<CS12);
	
}
ISR(TIMER1_COMPA_vect){
  ca:	1f 92       	push	r1
  cc:	0f 92       	push	r0
  ce:	0f b6       	in	r0, 0x3f	; 63
  d0:	0f 92       	push	r0
  d2:	11 24       	eor	r1, r1
  d4:	8f 93       	push	r24
	PORTC=~(PORTC);  
  d6:	85 b3       	in	r24, 0x15	; 21
  d8:	80 95       	com	r24
  da:	85 bb       	out	0x15, r24	; 21
	
  dc:	8f 91       	pop	r24
  de:	0f 90       	pop	r0
  e0:	0f be       	out	0x3f, r0	; 63
  e2:	0f 90       	pop	r0
  e4:	1f 90       	pop	r1
  e6:	18 95       	reti

000000e8 <_exit>:
  e8:	f8 94       	cli

000000ea <__stop_program>:
  ea:	ff cf       	rjmp	.-2      	; 0xea <__stop_program>
